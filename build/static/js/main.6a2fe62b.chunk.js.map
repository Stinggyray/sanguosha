{"version":3,"sources":["lib/cardCategories.js","lib/characters.js","lib/roles.js","lib/setup.js","lib/helper.js","lib/game.js","client/setModePanel.js","client/animatedItems.js","client/animatedBoard.js","client/gameArea.js","client/board.js","client/room.js","client/lobby.js","index.js"],"names":["BASIC","EQUIPMENT","name","country","health","gender","isMonarch","expansion","ROLE_DIST_LABELS","ROLE_DIST","2","3","4","5","6","7","8","9","10","CARDS","value","suit","type","drawCard","G","ctx","deck","discard","isFlipped","random","card","pop","length","push","Shuffle","splice","id","nextAlivePlayerPos","pos","isAlive","numPlayers","playOrder","newPos","pickUp","index","hands","playerID","turnOrder","first","startPlayerIndex","next","playOrderPos","SanGuoSha","setup","setupData","expansions","unshuffledRoles","forEach","role","i","j","roles","findIndex","allCharacters","CHARACTERS","filter","c","undefined","includes","numCharacterChoices","monarchChoices","normalCharacters","characterChoices","Object","fromEntries","map","player","slice","unshuffledDeck","characters","healths","equipment","isChained","harvest","privateZone","refusingDeath","playerView","newRoles","newCharacters","values","every","choices","phases","selectCharacters","start","onBegin","events","setActivePlayers","moveLimit","others","endIf","turn","order","stages","selectCharacter","moves","character","maxHealth","max","current","play","count","drawCards","_G","all","draw","judgment","targetPlayerID","forceCategory","category","give","otherPlayerID","dismantle","target","steal","toggleChain","flipObject","_ctx","objectID","reveal","source","visibleTo","returnCard","item","putDownHarvest","pickUpHarvest","finishHarvest","reverse","passLightning","astrology","numCards","actualNumCards","Math","min","finishAstrology","change","newValue","Die","alliance","player1","player2","temp","collapse","updateHealth","die","currentPlayer","endTurn","endPlay","setStage","discardCard","finishDiscard","minPlayers","maxPlayers","SetModePanel","handleHotkey","e","props","setMode","selectFunction","altKey","ctrlKey","metaKey","key","DEFAULT_MODE","GIVE_MODE","DISMANTLE_MODE","STEAL_MODE","REVEAL_MODE","FLIP_MODE","HELP_MODE","SHOW_HOTKEYS_MODE","keyCode","func","document","addEventListener","this","removeEventListener","className","renderButton","renderSpecialModeButton","onClick","renderHarvestButton","renderFinishDiscardButton","renderSpecialButton","renderHotkeys","targetMode","mode","disabled","stage","COUNTRY_SCENE_MODE","BLOCKADE_MODE","ALLIANCE_MODE","renderRoleDistribution","numKings","numRebels","numLoyalists","numSpies","activePlayers","React","Component","GIVE_JUDGMENT_MODE","items","from","update","clickable","animated","useTransition","enter","leave","unique","child","classNames","SUITS","AnimatedBoard","width","height","scaledWidth","scaledHeight","characterCards","healthPoints","normalCards","_","opacity","faceUp","left","top","img","src","interpolate","alt","style","transform","color","sideways","scale","div","transformOrigin","GameArea","state","selectedIndex","setState","helpCard","window","sanguosha","playerAreas","nodes","myPlayerIndex","indexOf","playerArea","playerIndex","addPlayerName","addCharacterRole","addCharacterCard","addHealth","addChain","addPlayerEquipment","addOtherPlayerHand","addCharacterChoices","addDeck","addMyHand","middleCards","getPrivateZoneCards","getHarvestCards","getDiscardCards","renderMyArea","renderActionButton","renderHelp","renderSetModePanel","startX","choice","matchData","x","y","roleName","isRefusingDeath","isDying","Set","size","floor","hand","marginLeft","marginTop","fontSize","spacing","middleCardsFound","privateCards","numCardsShown","setSelectedIndex","playAgain","gameover","phase","actionButton","text","dangerouslySetInnerHTML","__html","RULES","SanGuoShaBoard","updateDimensions","el","clientRect","clientWidth","clientHeight","gameArea","findPlayerAreas","ref","maxScale","bestLayout","numSide","numTop","findPlayerAreasGivenLayout","sideSpacing","topSpacing","SanGuoShaClient","Client","game","board","enhancer","applyMiddleware","logger","Room","SERVER","process","REACT_APP_PROXY","location","toString","replace","EXPANSIONS","multiplayer","SocketIO","server","debug","SanGuoShaLobby","refreshLobbyState","a","matchInfo","lobbyClient","listMatches","matches","matchID","match","find","leaveMatch","parentMatchID","inGame","childMatch","joinMatch","clearTimeout","timeout","setTimeout","renderMatch","status","createdAt","players","playerNames","onChange","checked","buttons","some","then","createMatch","Date","toLocaleString","join","setName","getElementById","localStorage","setItem","playerName","playerCredentials","credentials","JSON","stringify","removeItem","nextMatchID","LobbyClient","getItem","parse","querySelector","playAudio","renderLobby","defaultValue","onKeyPress","nativeEvent","maybeRenderCreateButton","App","audio","Audio","volume","loop","REACT_APP_LOCAL","render"],"mappings":"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","file":"static/js/main.6a2fe62b.chunk.js","sourcesContent":["export const BASIC = ['Attack', 'Escape', 'Peach', 'Fire Attack', 'Lightning Attack', 'Wine'];\r\n\r\nexport const EQUIPMENT = {\r\n    'Lightning': 'Lightning',\r\n    'Capture': 'Capture',\r\n    'Starvation': 'Starvation',\r\n    'Crossbow': 'Weapon',\r\n    'Black Pommel': 'Weapon',\r\n    'Ice Sword': 'Weapon',\r\n    'Gender Swords': 'Weapon',\r\n    'Green Dragon Blade': 'Weapon',\r\n    'Serpent Spear': 'Weapon',\r\n    'Axe': 'Weapon',\r\n    'Sky Scorcher': 'Weapon',\r\n    'Longbow': 'Weapon',\r\n    'Ancient Scimitar': 'Weapon',\r\n    'Fire Fan': 'Weapon',\r\n    'Eight Trigrams': 'Shield',\r\n    'Black Shield': 'Shield',\r\n    'Wood Armor': 'Shield',\r\n    'Silver Helmet': 'Shield',\r\n    'Red Hare': '-1',\r\n    'Da Yuan': '-1',\r\n    'Zi Xing': '-1',\r\n    'Di Lu': '+1',\r\n    'Shadow Runner': '+1',\r\n    'Storm Runner': '+1',\r\n    'Hua Liu': '+1',\r\n};\r\n","\r\nexport default [\r\n    {\r\n        name: 'Liu Bei',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'M',\r\n        isMonarch: true,\r\n    },\r\n    {\r\n        name: 'Guan Yu',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Zhang Fei',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Zhuge Liang',\r\n        country: 'Shu',\r\n        health: 3,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Zhao Yun',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Ma Chao',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Huang Yue Ying',\r\n        country: 'Shu',\r\n        health: 3,\r\n        gender: 'F',\r\n    },\r\n    {\r\n        name: 'Sun Quan',\r\n        country: 'Wu',\r\n        health: 4,\r\n        gender: 'M',\r\n        isMonarch: true,\r\n    },\r\n    {\r\n        name: 'Gan Ning',\r\n        country: 'Wu',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Lu Meng',\r\n        country: 'Wu',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Huang Gai',\r\n        country: 'Wu',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Zhou Yu',\r\n        country: 'Wu',\r\n        health: 3,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Da Qiao',\r\n        country: 'Wu',\r\n        health: 3,\r\n        gender: 'F',\r\n    },\r\n    {\r\n        name: 'Lu Xun',\r\n        country: 'Wu',\r\n        health: 3,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Sun Shang Xiang',\r\n        country: 'Wu',\r\n        health: 3,\r\n        gender: 'F',\r\n    },\r\n    {\r\n        name: 'Cao Cao',\r\n        country: 'Wei',\r\n        health: 4,\r\n        gender: 'M',\r\n        isMonarch: true,\r\n    },\r\n    {\r\n        name: 'Sima Yi',\r\n        country: 'Wei',\r\n        health: 3,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Xiahou Dun',\r\n        country: 'Wei',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Zhang Liao',\r\n        country: 'Wei',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Xu Chu',\r\n        country: 'Wei',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Guo Jia',\r\n        country: 'Wei',\r\n        health: 3,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Zhen Ji',\r\n        country: 'Wei',\r\n        health: 3,\r\n        gender: 'F',\r\n    },\r\n    {\r\n        name: 'Hua Tuo',\r\n        country: 'Kingdomless',\r\n        health: 3,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Diao Chan',\r\n        country: 'Kingdomless',\r\n        health: 3,\r\n        gender: 'F',\r\n    },\r\n    {\r\n        name: 'Lu Bu',\r\n        country: 'Kingdomless',\r\n        health: 4,\r\n        gender: 'M',\r\n    },\r\n    {\r\n        name: 'Wei Yan',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'wind',\r\n    },\r\n    {\r\n        name: 'Huang Zhong',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'wind',\r\n    },\r\n    {\r\n        name: 'Xiahou Yuan',\r\n        country: 'Wei',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'wind',\r\n    },\r\n    {\r\n        name: 'Cao Ren',\r\n        country: 'Wei',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'wind',\r\n    },\r\n    {\r\n        name: 'Zhou Tai',\r\n        country: 'Wu',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'wind',\r\n    },\r\n    {\r\n        name: 'Xiao Qiao',\r\n        country: 'Wu',\r\n        health: 3,\r\n        gender: 'F',\r\n        expansion: 'wind',\r\n    },\r\n    {\r\n        name: 'Zhang Jiao',\r\n        country: 'Kingdomless',\r\n        health: 3,\r\n        gender: 'M',\r\n        expansion: 'wind',\r\n        isMonarch: true,\r\n    },\r\n    {\r\n        name: 'Yu Ji',\r\n        country: 'Kingdomless',\r\n        health: 3,\r\n        gender: 'M',\r\n        expansion: 'wind',\r\n    },\r\n    {\r\n        name: 'Zhuge Liang 8',\r\n        country: 'Shu',\r\n        health: 3,\r\n        gender: 'M',\r\n        expansion: 'fire',\r\n    },\r\n    {\r\n        name: 'Pang Tong',\r\n        country: 'Shu',\r\n        health: 3,\r\n        gender: 'M',\r\n        expansion: 'fire',\r\n    },\r\n    {\r\n        name: 'Dian Wei',\r\n        country: 'Wei',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'fire',\r\n    },\r\n    {\r\n        name: 'Xun Yu',\r\n        country: 'Wei',\r\n        health: 3,\r\n        gender: 'M',\r\n        expansion: 'fire',\r\n    },\r\n    {\r\n        name: 'Tai Shi Ci',\r\n        country: 'Wu',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'fire',\r\n    },\r\n    {\r\n        name: 'Yuan Shao',\r\n        country: 'Kingdomless',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'fire',\r\n        isMonarch: true,\r\n    },\r\n    {\r\n        name: 'Pang De',\r\n        country: 'Kingdomless',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'fire',\r\n    },\r\n    {\r\n        name: 'Yan Liang Wen Chou',\r\n        country: 'Kingdomless',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'fire',\r\n    },\r\n    {\r\n        name: 'Meng Huo',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'wood',\r\n    },\r\n    {\r\n        name: 'Zhu Rong',\r\n        country: 'Shu',\r\n        health: 4,\r\n        gender: 'F',\r\n        expansion: 'wood',\r\n    },\r\n    {\r\n        name: 'Xu Huang',\r\n        country: 'Wei',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'wood',\r\n    },\r\n    {\r\n        name: 'Cao Pi',\r\n        country: 'Wei',\r\n        health: 3,\r\n        gender: 'M',\r\n        expansion: 'wood',\r\n        isMonarch: true,\r\n    },\r\n    {\r\n        name: 'Sun Jian',\r\n        country: 'Wu',\r\n        health: 4,\r\n        gender: 'M',\r\n        expansion: 'wood',\r\n    },\r\n    {\r\n        name: 'Lu Su',\r\n        country: 'Wu',\r\n        health: 3,\r\n        gender: 'M',\r\n        expansion: 'wood',\r\n    },\r\n    {\r\n        name: 'Dong Zhuo',\r\n        country: 'Kingdomless',\r\n        health: 8,\r\n        gender: 'M',\r\n        expansion: 'wood',\r\n        isMonarch: true,\r\n    },\r\n    {\r\n        name: 'Jia Xu',\r\n        country: 'Kingdomless',\r\n        health: 3,\r\n        gender: 'M',\r\n        expansion: 'wood',\r\n    },\r\n];\r\n","// Recommended role distribution for different numbers of players\r\n// http://www.englishsanguosha.com/rules/roles\r\nexport const ROLE_DIST_LABELS = ['King', 'Rebel', 'Loyalist', 'Spy'];\r\nexport const ROLE_DIST = {\r\n    2: [1, 1, 0, 0],\r\n    3: [1, 1, 0, 1],\r\n    4: [1, 2, 0, 1],\r\n    5: [1, 2, 1, 1],\r\n    6: [1, 3, 1, 1],\r\n    7: [1, 3, 2, 1],\r\n    8: [1, 4, 2, 1],\r\n    9: [1, 4, 3, 1],\r\n    10: [1, 5, 3, 1],\r\n};\r\n","/**\r\n * Initial game setup.\r\n */\r\n\r\nimport CHARACTERS from './characters.js';\r\nimport { ROLE_DIST, ROLE_DIST_LABELS } from './roles.js';\r\n\r\nconst CARDS = [\r\n    { value: 'A', suit: 'CLUB', type: 'Crossbow' },\r\n    { value: 'A', suit: 'CLUB', type: 'Duel' },\r\n    { value: 'A', suit: 'CLUB', type: 'Silver Helmet' },\r\n    { value: '2', suit: 'CLUB', type: 'Attack' },\r\n    { value: '2', suit: 'CLUB', type: 'Eight Trigrams' },\r\n    { value: '2', suit: 'CLUB', type: 'Black Shield' },\r\n    { value: '2', suit: 'CLUB', type: 'Wood Armor' },\r\n    { value: '3', suit: 'CLUB', type: 'Wine' },\r\n    { value: '3', suit: 'CLUB', type: 'Break' },\r\n    { value: '3', suit: 'CLUB', type: 'Attack' },\r\n    { value: '4', suit: 'CLUB', type: 'Starvation' },\r\n    { value: '4', suit: 'CLUB', type: 'Attack' },\r\n    { value: '4', suit: 'CLUB', type: 'Break' },\r\n    { value: '5', suit: 'CLUB', type: 'Di Lu' },\r\n    { value: '5', suit: 'CLUB', type: 'Attack' },\r\n    { value: '5', suit: 'CLUB', type: 'Lightning Attack' },\r\n    { value: '6', suit: 'CLUB', type: 'Capture' },\r\n    { value: '6', suit: 'CLUB', type: 'Attack' },\r\n    { value: '6', suit: 'CLUB', type: 'Lightning Attack' },\r\n    { value: '7', suit: 'CLUB', type: 'Attack' },\r\n    { value: '7', suit: 'CLUB', type: 'Barbarians' },\r\n    { value: '7', suit: 'CLUB', type: 'Lightning Attack' },\r\n    { value: '8', suit: 'CLUB', type: 'Attack' },\r\n    { value: '8', suit: 'CLUB', type: 'Lightning Attack' },\r\n    { value: '8', suit: 'CLUB', type: 'Attack' },\r\n    { value: '9', suit: 'CLUB', type: 'Attack' },\r\n    { value: '9', suit: 'CLUB', type: 'Wine' },\r\n    { value: '9', suit: 'CLUB', type: 'Attack' },\r\n    { value: '10', suit: 'CLUB', type: 'Chains' },\r\n    { value: '10', suit: 'CLUB', type: 'Attack' },\r\n    { value: '10', suit: 'CLUB', type: 'Attack' },\r\n    { value: 'J', suit: 'CLUB', type: 'Attack' },\r\n    { value: 'J', suit: 'CLUB', type: 'Attack' },\r\n    { value: 'J', suit: 'CLUB', type: 'Chains' },\r\n    { value: 'Q', suit: 'CLUB', type: 'Coerce' },\r\n    { value: 'Q', suit: 'CLUB', type: 'Chains' },\r\n    { value: 'Q', suit: 'CLUB', type: 'Negate' },\r\n    { value: 'K', suit: 'CLUB', type: 'Coerce' },\r\n    { value: 'K', suit: 'CLUB', type: 'Negate' },\r\n    { value: 'K', suit: 'CLUB', type: 'Chains' },\r\n    { value: 'A', suit: 'DIAMOND', type: 'Crossbow' },\r\n    { value: 'A', suit: 'DIAMOND', type: 'Duel' },\r\n    { value: 'A', suit: 'DIAMOND', type: 'Fire Fan' },\r\n    { value: '2', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '2', suit: 'DIAMOND', type: 'Peach' },\r\n    { value: '2', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '3', suit: 'DIAMOND', type: 'Steal' },\r\n    { value: '3', suit: 'DIAMOND', type: 'Peach' },\r\n    { value: '3', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '4', suit: 'DIAMOND', type: 'Steal' },\r\n    { value: '4', suit: 'DIAMOND', type: 'Fire Attack' },\r\n    { value: '4', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '5', suit: 'DIAMOND', type: 'Fire Attack' },\r\n    { value: '5', suit: 'DIAMOND', type: 'Axe' },\r\n    { value: '5', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '6', suit: 'DIAMOND', type: 'Attack' },\r\n    { value: '6', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '6', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '7', suit: 'DIAMOND', type: 'Attack' },\r\n    { value: '7', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '7', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '8', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '8', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '8', suit: 'DIAMOND', type: 'Attack' },\r\n    { value: '9', suit: 'DIAMOND', type: 'Attack' },\r\n    { value: '9', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '9', suit: 'DIAMOND', type: 'Wine' },\r\n    { value: '10', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '10', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: '10', suit: 'DIAMOND', type: 'Attack' },\r\n    { value: 'J', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: 'J', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: 'J', suit: 'DIAMOND', type: 'Escape' },\r\n    { value: 'Q', suit: 'DIAMOND', type: 'Blaze' },\r\n    { value: 'Q', suit: 'DIAMOND', type: 'Negate' },\r\n    { value: 'Q', suit: 'DIAMOND', type: 'Peach' },\r\n    { value: 'Q', suit: 'DIAMOND', type: 'Sky Scorcher' },\r\n    { value: 'K', suit: 'DIAMOND', type: 'Hua Liu' },\r\n    { value: 'K', suit: 'DIAMOND', type: 'Attack' },\r\n    { value: 'K', suit: 'DIAMOND', type: 'Zi Xing' },\r\n    { value: 'A', suit: 'HEART', type: 'Negate' },\r\n    { value: 'A', suit: 'HEART', type: 'Hail of Arrows' },\r\n    { value: 'A', suit: 'HEART', type: 'Peach Garden' },\r\n    { value: '2', suit: 'HEART', type: 'Escape' },\r\n    { value: '2', suit: 'HEART', type: 'Escape' },\r\n    { value: '2', suit: 'HEART', type: 'Blaze' },\r\n    { value: '3', suit: 'HEART', type: 'Blaze' },\r\n    { value: '3', suit: 'HEART', type: 'Harvest' },\r\n    { value: '3', suit: 'HEART', type: 'Peach' },\r\n    { value: '4', suit: 'HEART', type: 'Harvest' },\r\n    { value: '4', suit: 'HEART', type: 'Fire Attack' },\r\n    { value: '4', suit: 'HEART', type: 'Peach' },\r\n    { value: '5', suit: 'HEART', type: 'Peach' },\r\n    { value: '5', suit: 'HEART', type: 'Longbow' },\r\n    { value: '5', suit: 'HEART', type: 'Red Hare' },\r\n    { value: '6', suit: 'HEART', type: 'Peach' },\r\n    { value: '6', suit: 'HEART', type: 'Capture' },\r\n    { value: '6', suit: 'HEART', type: 'Peach' },\r\n    { value: '7', suit: 'HEART', type: 'Peach' },\r\n    { value: '7', suit: 'HEART', type: 'Draw Two' },\r\n    { value: '7', suit: 'HEART', type: 'Fire Attack' },\r\n    { value: '8', suit: 'HEART', type: 'Escape' },\r\n    { value: '8', suit: 'HEART', type: 'Draw Two' },\r\n    { value: '8', suit: 'HEART', type: 'Peach' },\r\n    { value: '9', suit: 'HEART', type: 'Peach' },\r\n    { value: '9', suit: 'HEART', type: 'Escape' },\r\n    { value: '9', suit: 'HEART', type: 'Draw Two' },\r\n    { value: '10', suit: 'HEART', type: 'Attack' },\r\n    { value: '10', suit: 'HEART', type: 'Attack' },\r\n    { value: '10', suit: 'HEART', type: 'Fire Attack' },\r\n    { value: 'J', suit: 'HEART', type: 'Attack' },\r\n    { value: 'J', suit: 'HEART', type: 'Escape' },\r\n    { value: 'J', suit: 'HEART', type: 'Draw Two' },\r\n    { value: 'Q', suit: 'HEART', type: 'Escape' },\r\n    { value: 'Q', suit: 'HEART', type: 'Peach' },\r\n    { value: 'Q', suit: 'HEART', type: 'Lightning' },\r\n    { value: 'Q', suit: 'HEART', type: 'Break' },\r\n    { value: 'K', suit: 'HEART', type: 'Escape' },\r\n    { value: 'K', suit: 'HEART', type: 'Negate' },\r\n    { value: 'K', suit: 'HEART', type: 'Storm Runner' },\r\n    { value: 'A', suit: 'SPADE', type: 'Ancient Scimitar' },\r\n    { value: 'A', suit: 'SPADE', type: 'Duel' },\r\n    { value: 'A', suit: 'SPADE', type: 'Lightning' },\r\n    { value: '2', suit: 'SPADE', type: 'Ice Sword' },\r\n    { value: '2', suit: 'SPADE', type: 'Gender Swords' },\r\n    { value: '2', suit: 'SPADE', type: 'Eight Trigrams' },\r\n    { value: '2', suit: 'SPADE', type: 'Wood Armor' },\r\n    { value: '3', suit: 'SPADE', type: 'Wine' },\r\n    { value: '3', suit: 'SPADE', type: 'Break' },\r\n    { value: '3', suit: 'SPADE', type: 'Steal' },\r\n    { value: '4', suit: 'SPADE', type: 'Break' },\r\n    { value: '4', suit: 'SPADE', type: 'Lightning Attack' },\r\n    { value: '4', suit: 'SPADE', type: 'Steal' },\r\n    { value: '5', suit: 'SPADE', type: 'Shadow Runner' },\r\n    { value: '5', suit: 'SPADE', type: 'Lightning Attack' },\r\n    { value: '5', suit: 'SPADE', type: 'Green Dragon Blade' },\r\n    { value: '6', suit: 'SPADE', type: 'Black Pommel' },\r\n    { value: '6', suit: 'SPADE', type: 'Capture' },\r\n    { value: '6', suit: 'SPADE', type: 'Lightning Attack' },\r\n    { value: '7', suit: 'SPADE', type: 'Barbarians' },\r\n    { value: '7', suit: 'SPADE', type: 'Lightning Attack' },\r\n    { value: '7', suit: 'SPADE', type: 'Attack' },\r\n    { value: '8', suit: 'SPADE', type: 'Attack' },\r\n    { value: '8', suit: 'SPADE', type: 'Attack' },\r\n    { value: '8', suit: 'SPADE', type: 'Lightning Attack' },\r\n    { value: '9', suit: 'SPADE', type: 'Attack' },\r\n    { value: '9', suit: 'SPADE', type: 'Attack' },\r\n    { value: '9', suit: 'SPADE', type: 'Wine' },\r\n    { value: '10', suit: 'SPADE', type: 'Attack' },\r\n    { value: '10', suit: 'SPADE', type: 'Attack' },\r\n    { value: '10', suit: 'SPADE', type: 'Starvation' },\r\n    { value: 'J', suit: 'SPADE', type: 'Chains' },\r\n    { value: 'J', suit: 'SPADE', type: 'Steal' },\r\n    { value: 'J', suit: 'SPADE', type: 'Negate' },\r\n    { value: 'Q', suit: 'SPADE', type: 'Serpent Spear' },\r\n    { value: 'Q', suit: 'SPADE', type: 'Chains' },\r\n    { value: 'Q', suit: 'SPADE', type: 'Break' },\r\n    { value: 'K', suit: 'SPADE', type: 'Da Yuan' },\r\n    { value: 'K', suit: 'SPADE', type: 'Negate' },\r\n    { value: 'K', suit: 'SPADE', type: 'Barbarians' },\r\n];\r\n\r\nexport default function setup(ctx, setupData) {\r\n    const { numPlayers, playOrder, random } = ctx;\r\n    const expansions = (setupData || {}).expansions || [];\r\n\r\n    const unshuffledRoles = [];\r\n    ROLE_DIST_LABELS.forEach((role, i) => {\r\n        for (let j = 0; j < ROLE_DIST[numPlayers][i]; j++) {\r\n            unshuffledRoles.push({ name: role });\r\n        }\r\n    });\r\n    const roles = random.Shuffle(unshuffledRoles);\r\n    for (let i = 0; i < roles.length; i++) {\r\n        roles[i].id = `role-${i}`;\r\n    }\r\n    const startPlayerIndex = roles.findIndex(role => role.name === 'King');\r\n\r\n    const allCharacters = CHARACTERS.filter(c => c.expansion === undefined || expansions.includes(c.expansion));\r\n    const numCharacterChoices = 3 * (numPlayers + 1) <= allCharacters.length ? 3 : 2;\r\n    const monarchChoices = random.Shuffle(allCharacters.filter(c => c.isMonarch));\r\n    const normalCharacters = random.Shuffle(allCharacters.filter(c => !monarchChoices.includes(c)));\r\n    const characterChoices = Object.fromEntries(playOrder.map((player, i) =>\r\n        [player, normalCharacters.slice(numCharacterChoices * i, numCharacterChoices * (i + 1))]));\r\n    characterChoices[playOrder[startPlayerIndex]].push(...monarchChoices.slice(0, numCharacterChoices));\r\n    const characters = {};\r\n    const healths = {};\r\n    const isAlive = Object.fromEntries(playOrder.map(player => [player, true]));\r\n\r\n    const unshuffledDeck = CARDS.map(card => { return { ...card } });\r\n    const deck = random.Shuffle(unshuffledDeck);\r\n    for (let i = 0; i < deck.length; i++) {\r\n        deck[i].id = `card-${i}`;\r\n    }\r\n    const discard = [];\r\n\r\n    const hands = Object.fromEntries(playOrder.map(player => [player, []]));\r\n    const equipment = Object.fromEntries(playOrder.map(player => [player, {}]));\r\n    const isChained = {};\r\n    const isFlipped = {};\r\n    const harvest = [];\r\n    const privateZone = [];\r\n    const refusingDeath = [1];\r\n\r\n    return {\r\n        roles,\r\n        startPlayerIndex,\r\n        characterChoices,\r\n        characters,\r\n        healths,\r\n        isAlive,\r\n        deck,\r\n        discard,\r\n        hands,\r\n        equipment,\r\n        isChained,\r\n        isFlipped,\r\n        harvest,\r\n        privateZone,\r\n        refusingDeath,\r\n    };\r\n}\r\n","export function drawCard(G, ctx) {\r\n    const { deck, discard, isFlipped } = G;\r\n    const { random } = ctx;\r\n\r\n    const card = deck.pop();\r\n    if (deck.length === 0) {\r\n        // shuffle cards in discard back into the deck\r\n        deck.push(...random.Shuffle(discard.splice(0, discard.length)));\r\n    }\r\n    if (isFlipped[card.id]) {\r\n        delete isFlipped[card.id];\r\n    }\r\n    return card;\r\n}\r\n\r\nexport function drawCards(G, ctx, playerID, count) {\r\n    const { hands } = G;\r\n    for (let i = 0; i < count; i++) {\r\n        const card = drawCard(G, ctx);\r\n        hands[playerID].push(card);\r\n    }\r\n}\r\n\r\nexport function discard(G, ctx, card) {\r\n    const { deck, discard } = G;\r\n    const { random } = ctx;\r\n\r\n    discard.push(card);\r\n    if (deck.length === 0) {\r\n        deck.push(...random.Shuffle(discard.splice(0, discard.length)));\r\n    }\r\n}\r\n\r\nexport function nextAlivePlayerPos(G, ctx, pos) {\r\n    const { isAlive } = G;\r\n    const { numPlayers, playOrder } = ctx;\r\n    let newPos = pos;\r\n    do {\r\n        newPos = (newPos + 1) % numPlayers;\r\n    } while (!isAlive[playOrder[newPos]]);\r\n    return newPos;\r\n}\r\n","import { EQUIPMENT } from './cardCategories.js';\r\nimport setup from './setup.js';\r\nimport { drawCard, drawCards, discard, nextAlivePlayerPos } from './helper.js';\r\n\r\n/* Moves */\r\n\r\nfunction selectCharacter(G, ctx, index) {\r\n    const { startPlayerIndex, characterChoices, characters, healths } = G;\r\n    const { numPlayers, playerID, playOrder } = ctx;\r\n    const character = characterChoices[playerID][index];\r\n    characterChoices[playerID] = undefined;\r\n    characters[playerID] = character;\r\n    let maxHealth = character.health;\r\n    if (numPlayers >= 4 && playOrder[startPlayerIndex] === playerID) {\r\n        // if >= 4 players, add 1 extra health for the King\r\n        maxHealth++;\r\n    }\r\n    healths[playerID] = {\r\n        max: maxHealth,\r\n        current: maxHealth,\r\n    };\r\n}\r\n\r\nfunction draw(G, ctx) {\r\n    const { hands } = G;\r\n    const { playerID } = ctx;\r\n    const card = drawCard(G, ctx);\r\n    hands[playerID].push(card);\r\n}\r\n\r\nfunction judgment(G, ctx) {\r\n    const card = drawCard(G, ctx);\r\n    discard(G, ctx, card);\r\n}\r\n\r\nfunction play(G, ctx, index, targetPlayerID, forceCategory) {\r\n    const { hands, equipment, isFlipped } = G;\r\n    const { playerID } = ctx;\r\n    const [card] = hands[playerID].splice(index, 1);\r\n    if (card === undefined) {\r\n        return;\r\n    }\r\n    const category = forceCategory || EQUIPMENT[card.type];\r\n    if (!isFlipped[card.id] && category) {\r\n        if (targetPlayerID === undefined) {\r\n            targetPlayerID = playerID;\r\n        }\r\n        if (equipment[targetPlayerID][category]) {\r\n            discard(G, ctx, equipment[targetPlayerID][category]);\r\n        }\r\n        equipment[targetPlayerID][category] = card;\r\n    } else {\r\n        discard(G, ctx, card);\r\n    }\r\n}\r\n\r\nfunction pickUp(G, ctx, index) {\r\n    const { discard, hands } = G;\r\n    const { playerID } = ctx;\r\n    const [card] = discard.splice(index, 1);\r\n    hands[playerID].push(card);\r\n}\r\n\r\nfunction give(G, ctx, index, otherPlayerID) {\r\n    const { hands } = G;\r\n    const { playerID } = ctx;\r\n    const [card] = hands[playerID].splice(index, 1);\r\n    if (card === undefined) {\r\n        return;\r\n    }\r\n    hands[otherPlayerID].push(card);\r\n}\r\n\r\nfunction dismantle(G, ctx, target) {\r\n    const { hands, equipment } = G;\r\n    if (target.index !== undefined) {\r\n        const [card] = hands[target.playerID].splice(target.index, 1);\r\n        discard(G, ctx, card);\r\n    } else {\r\n        const card = equipment[target.playerID][target.category];\r\n        equipment[target.playerID][target.category] = undefined;\r\n        discard(G, ctx, card);\r\n    }\r\n}\r\n\r\nfunction steal(G, ctx, target) {\r\n    const { hands, equipment } = G;\r\n    const { playerID } = ctx;\r\n    if (target.index !== undefined) {\r\n        const [card] = hands[target.playerID].splice(target.index, 1);\r\n        hands[playerID].push(card);\r\n    } else {\r\n        const card = equipment[target.playerID][target.category];\r\n        equipment[target.playerID][target.category] = undefined;\r\n        hands[playerID].push(card);\r\n    }\r\n}\r\n\r\nfunction toggleChain(G, ctx) {\r\n    const { isChained } = G;\r\n    const { playerID } = ctx;\r\n    isChained[playerID] = !isChained[playerID];\r\n}\r\n\r\nfunction flipObject(G, _ctx, objectID) {\r\n    const { isFlipped } = G;\r\n    isFlipped[objectID] = !isFlipped[objectID];\r\n}\r\n\r\nfunction reveal(G, ctx, index, otherPlayerID) {\r\n    const { hands, privateZone } = G;\r\n    const { playerID } = ctx;\r\n    const [card] = hands[playerID].splice(index, 1);\r\n    if (card === undefined) {\r\n        return;\r\n    }\r\n    privateZone.push({\r\n        card,\r\n        source: { playerID },\r\n        visibleTo: [playerID, otherPlayerID],\r\n    });\r\n}\r\n\r\nfunction returnCard(G, _ctx, id) {\r\n    const { deck, hands, privateZone } = G;\r\n    const index = privateZone.findIndex(item => item.card.id === id);\r\n    const [{ card, source }] = privateZone.splice(index, 1);\r\n    if (source.playerID !== undefined) {\r\n        hands[source.playerID].push(card);\r\n    } else if (source.deck) {\r\n        deck.push(card);\r\n    }\r\n}\r\n\r\nfunction harvest(G, ctx) {\r\n    const { isAlive, harvest } = G;\r\n    const { playOrder } = ctx;\r\n    const numPlayers = playOrder.filter(player => isAlive[player]).length;\r\n    for (let i = 0; i < numPlayers; i++) {\r\n        const card = drawCard(G, ctx);\r\n        harvest.push(card);\r\n    }\r\n}\r\n\r\nfunction putDownHarvest(G, ctx, index) {\r\n    const { hands, harvest } = G;\r\n    const { playerID } = ctx;\r\n    const [card] = hands[playerID].splice(index, 1);\r\n    if (card === undefined) {\r\n        return;\r\n    }\r\n    harvest.push(card);\r\n}\r\n\r\nfunction pickUpHarvest(G, ctx, index) {\r\n    const { hands, harvest } = G;\r\n    const { playerID } = ctx;\r\n    const [card] = harvest.splice(index, 1);\r\n    hands[playerID].push(card);\r\n}\r\n\r\nfunction finishHarvest(G) {\r\n    const { discard, harvest } = G;\r\n    discard.push(...harvest.splice(0, harvest.length).reverse());\r\n}\r\n\r\nfunction passLightning(G, ctx) {\r\n    const { equipment } = G;\r\n    const { numPlayers, playOrder } = ctx;\r\n    for (let i = 0; i < numPlayers; i++) {\r\n        if (equipment[playOrder[i]]['Lightning'] !== undefined) {\r\n            const newPos = nextAlivePlayerPos(G, ctx, i);\r\n            equipment[playOrder[newPos]]['Lightning'] = equipment[playOrder[i]]['Lightning'];\r\n            equipment[playOrder[i]]['Lightning'] = undefined;\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nfunction astrology(G, ctx, numCards) {\r\n    const { isAlive, privateZone } = G;\r\n    const { playerID, playOrder } = ctx;\r\n    const actualNumCards = numCards || Math.min(playOrder.filter(player => isAlive[player]).length, 5);\r\n    for (let i = 0; i < actualNumCards; i++) {\r\n        const card = drawCard(G, ctx);\r\n        privateZone.push({\r\n            card,\r\n            source: { deck: true },\r\n            visibleTo: [playerID],\r\n        });\r\n    }\r\n}\r\n\r\nfunction finishAstrology(G) {\r\n    const { deck, privateZone } = G;\r\n    deck.splice(0, 0, ...privateZone.filter(item => item.source.deck).map(item => item.card));\r\n    G.privateZone = privateZone.filter(item => !item.source.deck);\r\n}\r\n\r\nfunction refusingDeath(G, ctx, change) {\r\n    const { healths, refusingDeath } = G;\r\n    const { playerID, random } = ctx;\r\n    if (change === -1) {\r\n        const newValue = random.Die(13);\r\n        refusingDeath.push(newValue);\r\n        healths[playerID].current = 0;\r\n    } else if (change === 1) {\r\n        refusingDeath.pop();\r\n        if (refusingDeath.length === 0) {\r\n            healths[playerID].current = 1;\r\n            refusingDeath.push(1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction alliance(G, _ctx, player1, player2) {\r\n    const { hands } = G;\r\n    const temp = hands[player1];\r\n    hands[player1] = hands[player2];\r\n    hands[player2] = temp;\r\n}\r\n\r\nfunction collapse(G, ctx) {\r\n    const { healths } = G;\r\n    const { playerID } = ctx;\r\n    healths[playerID].max--;\r\n    if (healths[playerID].max < 0) {\r\n        healths[playerID].max = 8;\r\n    }\r\n    if (healths[playerID].current > healths[playerID].max) {\r\n        healths[playerID].current--;\r\n    }\r\n}\r\n\r\nfunction updateHealth(G, ctx, change) {\r\n    const { healths } = G;\r\n    const { playerID } = ctx;\r\n    healths[playerID].current += change;\r\n    if (healths[playerID].current > healths[playerID].max) {\r\n        healths[playerID].current = healths[playerID].max;\r\n    }\r\n    if (healths[playerID].current < 0) {\r\n        healths[playerID].current = 0;\r\n    }\r\n}\r\n\r\nfunction die(G, ctx) {\r\n    const { isAlive } = G;\r\n    const { currentPlayer, events, playerID } = ctx;\r\n    delete isAlive[playerID];\r\n    if (currentPlayer === playerID) {\r\n        events.endTurn();\r\n    }\r\n}\r\n\r\nfunction endPlay(G, ctx) {\r\n    const { healths, hands } = G;\r\n    const { currentPlayer, events, playerID } = ctx;\r\n    if (currentPlayer === playerID) {\r\n        events.setStage('discard');\r\n        if (hands[playerID].length <= healths[playerID].current) {\r\n            events.endTurn();\r\n        }\r\n    }\r\n}\r\n\r\nfunction discardCard(G, ctx, index) {\r\n    const { healths, hands } = G;\r\n    const { events, playerID } = ctx;\r\n    const [card] = hands[playerID].splice(index, 1);\r\n    if (card === undefined) {\r\n        return;\r\n    }\r\n    discard(G, ctx, card);\r\n    if (hands[playerID].length <= healths[playerID].current) {\r\n        events.endTurn();\r\n    }\r\n}\r\n\r\nfunction finishDiscard(_G, ctx) {\r\n    const { currentPlayer, events, playerID } = ctx;\r\n    if (currentPlayer === playerID) {\r\n        events.endTurn();\r\n    }\r\n}\r\n\r\n/* Game object */\r\n\r\nconst turnOrder = {\r\n    first: G => G.startPlayerIndex,\r\n    next: (G, ctx) => nextAlivePlayerPos(G, ctx, ctx.playOrderPos),\r\n};\r\n\r\nexport const SanGuoSha = {\r\n    name: \"san-guo-sha\",\r\n\r\n    setup,\r\n\r\n    playerView: (G, ctx, playerID) => {\r\n        const { roles, characterChoices, characters, isAlive } = G;\r\n        const { numPlayers, playOrder } = ctx;\r\n\r\n        const newRoles = { ...roles };\r\n        for (let i = 0; i < numPlayers; i++) {\r\n            if (playOrder[i] !== playerID && isAlive[playOrder[i]] && newRoles[i].name !== 'King') {\r\n                newRoles[i] = {id: roles[i].id};\r\n            }\r\n        }\r\n\r\n        const newCharacters = { ...characters };\r\n        const areAllCharactersChosen = Object.values(characterChoices).every(choices => choices === undefined);\r\n        if (!areAllCharactersChosen) {\r\n            for (let i = 0; i < numPlayers; i++) {\r\n                if (playOrder[i] !== playerID && newRoles[i].name !== 'King') {\r\n                    delete newCharacters[playOrder[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...G,\r\n            roles: newRoles,\r\n            characters: newCharacters,\r\n        };\r\n    },\r\n\r\n    phases: {\r\n        selectCharacters: {\r\n            start: true,\r\n\r\n            onBegin: (G, ctx) => {\r\n                const { startPlayerIndex } = G;\r\n                const { events, playOrder } = ctx;\r\n                events.setActivePlayers({\r\n                    value: {[playOrder[startPlayerIndex]]: 'selectCharacter'},\r\n                    moveLimit: 1,\r\n                    next: {\r\n                        others: 'selectCharacter',\r\n                        moveLimit: 1,\r\n                    }\r\n                });\r\n\r\n                // make character choices automatically for easier testing\r\n                // TODO remove\r\n                //playOrder.forEach(player => selectCharacter(G, { ...ctx, playerID: player }, 0));\r\n            },\r\n\r\n            // end select characters phase if everyone has made a character choice\r\n            endIf: G => Object.values(G.characterChoices).every(choices => choices === undefined),\r\n\r\n            next: 'play',\r\n\r\n            turn: {\r\n                order: turnOrder,\r\n                stages: {\r\n                    selectCharacter: {\r\n                        moves: { selectCharacter },\r\n                    },\r\n                },\r\n            }\r\n        },\r\n\r\n        play: {\r\n            onBegin: (G, ctx) => {\r\n                const { playOrder } = ctx;\r\n                playOrder.forEach(player => drawCards(G, ctx, player, 4));\r\n            },\r\n\r\n            turn: {\r\n                order: turnOrder,\r\n                onBegin: (_G, ctx) => {\r\n                    const { events } = ctx;\r\n                    // everyone can play cards in freeform mode\r\n                    events.setActivePlayers({ all: 'play' });\r\n                },\r\n                stages: {\r\n                    play: {\r\n                        moves: {\r\n                            draw,\r\n                            judgment,\r\n                            play,\r\n                            pickUp,\r\n                            give,\r\n                            dismantle,\r\n                            steal,\r\n                            toggleChain,\r\n                            flipObject,\r\n                            reveal,\r\n                            returnCard,\r\n                            harvest,\r\n                            putDownHarvest,\r\n                            pickUpHarvest,\r\n                            finishHarvest,\r\n                            passLightning,\r\n                            astrology,\r\n                            finishAstrology,\r\n                            refusingDeath,\r\n                            alliance,\r\n                            collapse,\r\n                            updateHealth,\r\n                            die,\r\n                            endPlay,\r\n                         },\r\n                    },\r\n                    discard: {\r\n                        moves: { pickUp, discardCard, finishDiscard },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n\r\n    minPlayers: 2,\r\n\r\n    maxPlayers: 10,\r\n\r\n    endIf: (G, ctx) => {\r\n        const { isAlive } = G;\r\n        const { playOrder } = ctx;\r\n        return playOrder.filter(player => isAlive[player]).length === 1;\r\n    },\r\n};\r\n","import React from 'react';\r\nimport { ROLE_DIST } from '../lib/roles';\r\nimport './setModePanel.css';\r\n\r\nexport default class SetModePanel extends React.Component {\r\n\r\n    static DEFAULT_MODE = 'Default';\r\n    static GIVE_MODE = 'Give';\r\n    static DISMANTLE_MODE = 'Dismantle';\r\n    static STEAL_MODE = 'Steal';\r\n    static REVEAL_MODE = 'Reveal';\r\n    static FLIP_MODE = 'Flip';\r\n    static HELP_MODE = 'Help';\r\n    static SHOW_HOTKEYS_MODE = 'Hotkeys';\r\n    static GIVE_JUDGMENT_MODE = 'Give Judgment';\r\n    static COUNTRY_SCENE_MODE = 'Country Scene';\r\n    static BLOCKADE_MODE = 'Blockade';\r\n    static ALLIANCE_MODE = 'Alliance';\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleHotkey);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleHotkey);\r\n    }\r\n\r\n    render() {\r\n        const { moves } = this.props;\r\n        return <div className='set-mode-panel'>\r\n            <div className='section'>\r\n                {this.renderButton(SetModePanel.DEFAULT_MODE)}\r\n                {this.renderButton(SetModePanel.GIVE_MODE)}\r\n                {this.renderButton(SetModePanel.DISMANTLE_MODE)}\r\n                {this.renderButton(SetModePanel.STEAL_MODE)}\r\n                {this.renderButton(SetModePanel.REVEAL_MODE)}\r\n                {this.renderButton(SetModePanel.FLIP_MODE)}\r\n                {this.renderSpecialModeButton()}\r\n                {this.renderButton(SetModePanel.HELP_MODE)}\r\n                {this.renderButton(SetModePanel.SHOW_HOTKEYS_MODE)}\r\n            </div>\r\n            <div className='section'>\r\n                <button\r\n                    className='clickable'\r\n                    onClick={() => moves.judgment()}\r\n                >\r\n                    {'Judgment'}\r\n                </button>\r\n                {this.renderHarvestButton()}\r\n                <button\r\n                    className='clickable'\r\n                    onClick={() => moves.passLightning()}\r\n                >\r\n                    {'Lightning'}\r\n                </button>\r\n                {this.renderFinishDiscardButton()}\r\n                {this.renderSpecialButton()}\r\n                {this.renderHotkeys()}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    renderButton(targetMode) {\r\n        const { mode, setMode } = this.props;\r\n        return <button\r\n            className={mode === targetMode ? 'toggled' : 'selectable'}\r\n            disabled={mode === targetMode}\r\n            onClick={() => setMode(targetMode)}\r\n        >\r\n            {targetMode}\r\n        </button>\r\n    }\r\n\r\n    renderHarvestButton() {\r\n        const { G, moves } = this.props;\r\n        const { harvest } = G;\r\n        if (harvest.length === 0) {\r\n            return <button\r\n                className='clickable'\r\n                onClick={() => moves.harvest()}\r\n            >\r\n                {'Harvest'}\r\n            </button>;\r\n        } else {\r\n            return <button\r\n                className='clickable'\r\n                onClick={() => moves.finishHarvest()}\r\n            >\r\n                {'Finish'}\r\n            </button>;\r\n        }\r\n    }\r\n\r\n    renderFinishDiscardButton() {\r\n        const { moves } = this.props;\r\n        if (this.stage() === 'discard') {\r\n            return <button\r\n                className='clickable'\r\n                onClick={() => moves.finishDiscard()}\r\n            >\r\n                {'No discard'}\r\n            </button>\r\n        }\r\n    }\r\n\r\n    renderSpecialModeButton() {\r\n        const { G, playerID } = this.props;\r\n        const { characters } = G;\r\n        const character = characters[playerID];\r\n        if (character === undefined) {\r\n            return;\r\n        }\r\n        if (character.name === 'Da Qiao') {\r\n            return this.renderButton(SetModePanel.COUNTRY_SCENE_MODE);\r\n        }\r\n        if (character.name === 'Xu Huang') {\r\n            return this.renderButton(SetModePanel.BLOCKADE_MODE);\r\n        }\r\n        if (character.name === 'Lu Su') {\r\n            return this.renderButton(SetModePanel.ALLIANCE_MODE);\r\n        }\r\n    }\r\n\r\n    renderSpecialButton() {\r\n        const { G, ctx, moves, playerID } = this.props;\r\n        const { characters, privateZone } = G;\r\n        const { currentPlayer } = ctx;\r\n        const character = characters[playerID];\r\n        if (character === undefined) {\r\n            return;\r\n        }\r\n        if (character.name === 'Zhuge Liang' && currentPlayer === playerID) {\r\n            const doingAstrology = privateZone.filter(item => item.source.deck).length > 0;\r\n            if (doingAstrology) {\r\n                return <button\r\n                    className='clickable'\r\n                    onClick={() => moves.finishAstrology()}\r\n                >\r\n                    {'Finish'}\r\n                </button>;\r\n            } else {\r\n                return <button\r\n                    className='clickable'\r\n                    onClick={() => moves.astrology()}\r\n                >\r\n                    {'Astrology'}\r\n                </button>;\r\n            }\r\n        }\r\n        if (character.name === 'Dong Zhuo') {\r\n            return <button\r\n                className='clickable'\r\n                onClick={() => moves.collapse()}\r\n            >\r\n                {'Collapse'}\r\n            </button>;\r\n        }\r\n    }\r\n\r\n    renderHotkeys() {\r\n        const { mode, setMode } = this.props;\r\n        if (mode === SetModePanel.SHOW_HOTKEYS_MODE) {\r\n            return <div\r\n                className='hotkeys-panel'\r\n            >\r\n                {this.renderRoleDistribution()}\r\n                <table><tbody></tbody></table>\r\n                <div>Modifier hotkeys: press the hotkey to modify what your next click will do.</div>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Esc</td>\r\n                            <td>Return to default mode</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>G</td>\r\n                            <td>Give your next selected card to someone else</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>D</td>\r\n                            <td>Discard/dismantle your next selected card</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>S</td>\r\n                            <td>Steal your next selected card into your hand</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>R</td>\r\n                            <td>Reveal your next selected card to someone else</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>F</td>\r\n                            <td>Flip your next selected card</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>H</td>\r\n                            <td>Render help for the selected card</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div>Action hotkeys: press the hotkey to trigger an action immediately.</div>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1-9</td>\r\n                            <td>Play the Nth card in your hand</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>J</td>\r\n                            <td>Flip over a judgment card from the deck</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>V</td>\r\n                            <td>Turn over N cards from the deck for harvest</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>L</td>\r\n                            <td>Pass lightning card to the next player</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>C</td>\r\n                            <td>Draw a card into your hand</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Q</td>\r\n                            <td>Decrease your health by 1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>W</td>\r\n                            <td>Increase your health by 1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>T</td>\r\n                            <td>Toggle your chain state</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>E</td>\r\n                            <td>End your play phase (and start discard phase)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>N</td>\r\n                            <td>No discard (force end turn without discarding)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>?</td>\r\n                            <td>Open this menu</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button\r\n                    className='selectable'\r\n                    onClick={() => setMode(SetModePanel.DEFAULT_MODE)}\r\n                >\r\n                    {'X'}\r\n                </button>\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    handleHotkey = e => {\r\n        const { G, moves, setMode, selectFunction } = this.props;\r\n        const { harvest } = G;\r\n        if (e.altKey || e.ctrlKey || e.metaKey) {\r\n            return;\r\n        }\r\n        switch (e.key) {\r\n            case \"Escape\":\r\n                setMode(SetModePanel.DEFAULT_MODE);\r\n                break;\r\n            case \"g\":\r\n                setMode(SetModePanel.GIVE_MODE);\r\n                break;\r\n            case \"d\":\r\n                setMode(SetModePanel.DISMANTLE_MODE);\r\n                break;\r\n            case \"s\":\r\n                setMode(SetModePanel.STEAL_MODE);\r\n                break;\r\n            case \"r\":\r\n                setMode(SetModePanel.REVEAL_MODE);\r\n                break;\r\n            case \"f\":\r\n                setMode(SetModePanel.FLIP_MODE);\r\n                break;\r\n            case \"h\":\r\n                setMode(SetModePanel.HELP_MODE);\r\n                break;\r\n            case \"/\":\r\n            case \"?\":\r\n                setMode(SetModePanel.SHOW_HOTKEYS_MODE);\r\n                break;\r\n            case \"j\":\r\n                moves.judgment();\r\n                break;\r\n            case \"v\":\r\n                (harvest.length === 0 ? moves.harvest : moves.finishHarvest)();\r\n                break;\r\n            case \"l\":\r\n                moves.passLightning();\r\n                break;\r\n            case \"c\":\r\n                moves.draw();\r\n                break;\r\n            case \"q\":\r\n                moves.updateHealth(-1);\r\n                break;\r\n            case \"w\":\r\n                moves.updateHealth(+1);\r\n                break;\r\n            case \"t\":\r\n                moves.toggleChain();\r\n                break;\r\n            case \"e\":\r\n                moves.endPlay();\r\n                break;\r\n            case \"n\":\r\n                moves.finishDiscard();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (e.keyCode >= 49 && e.keyCode <= 57) {\r\n            const func = selectFunction(e.keyCode - 49);\r\n            if (func) {\r\n                func();\r\n            }\r\n        }\r\n    };\r\n\r\n    renderRoleDistribution() {\r\n        const { ctx } = this.props;\r\n        const { numPlayers } = ctx;\r\n        const [numKings, numRebels, numLoyalists, numSpies] = ROLE_DIST[numPlayers];\r\n        return <div>\r\n            This game has {numKings} {numKings !== 1 ? 'kings' : 'king'},{' '}\r\n            {numRebels} {numRebels !== 1 ? 'rebels' : 'rebel'},{' '}\r\n            {numLoyalists} {numLoyalists !== 1 ? 'loyalists' : 'loyalist'}, and{' '}\r\n            {numSpies} {numSpies !== 1 ? 'spies' : 'spy'}.\r\n        </div>\r\n    }\r\n\r\n    stage() {\r\n        const { ctx, playerID } = this.props;\r\n        const { activePlayers } = ctx;\r\n        return activePlayers && activePlayers[playerID];\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport React from 'react';\r\nimport { useTransition } from 'react-spring';\r\n\r\nexport default props => {\r\n    const {\r\n        items, // [{ key, onClick, ...otherProps }]\r\n        from, // item => { ...otherProps }\r\n        update, // item => { ...otherProps }\r\n        clickable, // boolean\r\n        animated, // (item, props) => <animated className='positioned item' />\r\n    } = props;\r\n\r\n    const transitions = useTransition(items, item => item.key, {\r\n        from,\r\n        enter: update,\r\n        update,\r\n        leave: from,\r\n        unique: true,\r\n    });\r\n\r\n    return transitions.map(({ item, props }) => {\r\n        let child = animated(item, props);\r\n        if (clickable) {\r\n            child = <div\r\n                key={item.key}\r\n                className={classNames('positioned', { 'selectable': item.onClick !== undefined })}\r\n                onClick={item.onClick}\r\n            >\r\n                {child}\r\n            </div>;\r\n        }\r\n        return child;\r\n    });\r\n}\r\n","import * as classNames from 'classnames';\r\nimport React from 'react';\r\nimport { animated, interpolate } from 'react-spring';\r\nimport AnimatedItems from './animatedItems';\r\nimport './animatedBoard.css';\r\n\r\nconst SUITS = {\r\n    'CLUB': '♣',\r\n    'DIAMOND': '♢',\r\n    'HEART': '♡',\r\n    'SPADE': '♠',\r\n};\r\n\r\nexport default class AnimatedBoard extends React.Component {\r\n\r\n    render() {\r\n        const { width, height, scaledWidth, scaledHeight, characterCards, healthPoints, normalCards } = this.props;\r\n        return <div>\r\n            <AnimatedItems\r\n                items={characterCards}\r\n                from={_ => { return { opacity: 0 }; }}\r\n                update={item => {\r\n                    return {\r\n                        faceUp: item.faceUp ? 1 : 0,\r\n                        opacity: item.opacity,\r\n                        left: item.left,\r\n                        top: item.top,\r\n                    };\r\n                }}\r\n                clickable={true}\r\n                animated={(item, props) => {\r\n                    const { faceUp, opacity, left, top } = props;\r\n                    return <animated.img\r\n                        className='positioned item shadow'\r\n                        src={faceUp.interpolate(faceUp => faceUp > 0.5 ? `./characters/${item.name}.jpg` : './characters/Character Back.jpg')}\r\n                        alt={item.name}\r\n                        style={{\r\n                            transform: faceUp.interpolate(faceUp => `rotateY(${faceUp * 180 - (faceUp > 0.5 ? 180 : 0)}deg)`),\r\n                            opacity,\r\n                            left,\r\n                            top,\r\n                            width: item.width,\r\n                            height: item.height,\r\n                        }} />;\r\n                }}\r\n            />\r\n            <AnimatedItems\r\n                items={healthPoints}\r\n                from={_ => { return { opacity: 0, left: 0, top: 0, width, height } }}\r\n                update={item => { return { opacity: 1, left: item.left, top: item.top, width: item.width, height: item.height } }}\r\n                animated={(item, props) => <animated.img\r\n                    key={item.key}\r\n                    className='positioned item'\r\n                    src={`./health/health-${item.color}.png`}\r\n                    alt='health'\r\n                    style={{\r\n                        opacity: props.opacity,\r\n                        left: props.left,\r\n                        top: props.top,\r\n                        width: props.width,\r\n                        height: props.height,\r\n                    }}\r\n                />}\r\n            />\r\n            <AnimatedItems\r\n                items={normalCards}\r\n                from={_ => { return { opacity: 0 } }}\r\n                update={item => {\r\n                    return {\r\n                        faceUp: item.faceUp ? 1 : 0,\r\n                        sideways: item.sideways ? 1 : 0,\r\n                        opacity: item.opacity,\r\n                        left: item.left,\r\n                        top: item.top,\r\n                        scale: item.scale,\r\n                    };\r\n                }}\r\n                clickable={true}\r\n                animated={(item, props) => {\r\n                    const { faceUp, sideways, opacity, left, top, scale } = props;\r\n                    return <animated.div\r\n                        className='positioned'\r\n                        style={{\r\n                            transformOrigin: '0 0',\r\n                            transform: interpolate([sideways, scale], (sideways, scale) => `scale(${scale}) rotateZ(${sideways * 90}deg)`),\r\n                            opacity,\r\n                            left,\r\n                            top,\r\n                            width: scaledWidth,\r\n                            height: scaledHeight,\r\n                        }}\r\n                    >\r\n                        <animated.div\r\n                            className={classNames('positioned', 'item', item.className)}\r\n                            style={{\r\n                                transform: faceUp.interpolate(faceUp => `rotateY(${faceUp * 180 - (faceUp > 0.5 ? 180 : 0)}deg)`),\r\n                                left: 0,\r\n                                top: 0,\r\n                                width: '100%',\r\n                                height: '100%',\r\n                            }}\r\n                        >\r\n                            <animated.img\r\n                                className='fill'\r\n                                src={faceUp.interpolate(faceUp => faceUp > 0.5 ? `./cards/${item.card.type}.jpg` : './cards/Card Back.jpg')}\r\n                                alt={'card'}\r\n                            />\r\n                            <animated.div\r\n                                className={classNames('card-value', ['DIAMOND', 'HEART'].includes(item.card.suit) ? 'red' : 'black')}\r\n                                style={{\r\n                                    opacity: faceUp,\r\n                                }}\r\n                            >\r\n                                {item.card.value}\r\n                                <br />\r\n                                {SUITS[item.card.suit]}\r\n                            </animated.div>\r\n                        </animated.div>\r\n                    </animated.div>\r\n                }}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport React from 'react';\r\nimport { BASIC, EQUIPMENT } from '../lib/cardCategories.js';\r\nimport RULES from '../lib/rules.json';\r\nimport SetModePanel from './setModePanel';\r\nimport AnimatedBoard from './animatedBoard';\r\nimport './gameArea.css';\r\n\r\n// Standard margin between objects\r\nconst DELTA = 10;\r\n\r\n// Number of pixels between info objects inside the character card to the character card's border\r\nconst INFO_DELTA = 4;\r\n\r\n// Ratio of ratio card to normal cards\r\nconst ROLE_RATIO = 0.25;\r\n\r\n// Ratio of other player hand cards and equipment cards to normal cards\r\nconst CARD_RATIO = 0.3;\r\n\r\n// Ratio of cards in the deck to normal cards\r\nconst DECK_RATIO = 0.5;\r\n\r\n// Ratio of cards in the middle to normal cards\r\nconst MIDDLE_CARD_RATIO = 0.7;\r\n\r\nexport default class GameArea extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mode: SetModePanel.DEFAULT_MODE,\r\n            selectedIndex: undefined,\r\n            helpCard: undefined,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { G, ctx, events, moves } = this.props;\r\n        window.sanguosha = { G, ctx, events, moves };\r\n    }\r\n\r\n    render() {\r\n        const { G, ctx, playerID, width, height, playerAreas, scaledWidth, scaledHeight } = this.props;\r\n        const { characters } = G;\r\n        const { numPlayers, playOrder } = ctx;\r\n\r\n        const characterCards = [];\r\n        const healthPoints = [];\r\n        const normalCards = [];\r\n        const nodes = [];\r\n\r\n        const myPlayerIndex = Math.max(playOrder.indexOf(playerID), 0);\r\n        playerAreas.forEach((playerArea, i) => {\r\n            const playerIndex = (myPlayerIndex + i) % numPlayers;\r\n            const player = playOrder[playerIndex];\r\n\r\n            this.addPlayerName(playerArea, playerIndex, player, nodes);\r\n            this.addCharacterRole(playerArea, playerIndex, nodes);\r\n\r\n            const character = characters[player];\r\n            this.addCharacterCard(playerArea, character, player, characterCards);\r\n            if (!character) {\r\n                return;\r\n            }\r\n\r\n            this.addHealth(playerArea, player, healthPoints, nodes);\r\n            this.addChain(playerArea, player, nodes);\r\n            this.addPlayerEquipment(playerArea, player, normalCards);\r\n            if (player !== playerID) {\r\n                this.addOtherPlayerHand(playerArea, player, normalCards, nodes);\r\n            }\r\n        });\r\n\r\n        this.addCharacterChoices(characterCards);\r\n\r\n        this.addDeck(normalCards);\r\n        this.addMyHand(normalCards);\r\n\r\n        // Once cards of some type are found, remaining cards are rendered transparently.\r\n        // We splice from the beginning so that these transparent cards don't block existing ones.\r\n        const middleCards = [];\r\n        middleCards.splice(0, 0, ...this.getPrivateZoneCards(middleCards.length > 0));\r\n        middleCards.splice(0, 0, ...this.getHarvestCards(middleCards.length > 0));\r\n        middleCards.splice(0, 0, ...this.getDiscardCards(middleCards.length > 0));\r\n        normalCards.push(...middleCards);\r\n\r\n        return <div>\r\n            {this.renderMyArea()}\r\n            <AnimatedBoard\r\n                width={width}\r\n                height={height}\r\n                scaledWidth={scaledWidth}\r\n                scaledHeight={scaledHeight}\r\n                characterCards={characterCards}\r\n                healthPoints={healthPoints}\r\n                normalCards={normalCards}\r\n            />\r\n            {nodes}\r\n            {this.renderActionButton()}\r\n            {this.renderHelp()}\r\n            {this.renderSetModePanel()}\r\n        </div>;\r\n    }\r\n\r\n    addCharacterChoices(characterCards) {\r\n        const { G, playerID, width, height, scaledWidth, scaledHeight } = this.props;\r\n        const { mode, selectedIndex } = this.state;\r\n        const { characterChoices } = G;\r\n        const choices = characterChoices[playerID];\r\n        if (this.stage() === 'selectCharacter' && choices !== undefined) {\r\n            const startX = (width - choices.length * scaledWidth - (choices.length - 1) * DELTA) / 2;\r\n            choices.forEach((choice, i) => {\r\n                let onClick;\r\n                if (mode === SetModePanel.DEFAULT_MODE) {\r\n                    onClick = () => this.setState({ selectedIndex: i === selectedIndex ? undefined : i });\r\n                } else if (mode === SetModePanel.HELP_MODE) {\r\n                    onClick = () => this.setState({ helpCard: { key: choice.name, src: `./characters/${choice.name}.jpg` } });\r\n                }\r\n                characterCards.push({\r\n                    key: `character-${choice.name}`,\r\n                    name: choice.name,\r\n                    faceUp: true,\r\n                    opacity: 1,\r\n                    left: startX + (scaledWidth + DELTA) * i,\r\n                    top: (height - scaledHeight) / 2 - (i === selectedIndex ? 20 : 0),\r\n                    width: scaledWidth,\r\n                    height: scaledHeight,\r\n                    onClick,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    addPlayerName(playerArea, playerIndex, player, nodes) {\r\n        const { ctx, playerID, matchData, scaledWidth, scaledHeight } = this.props;\r\n        const { currentPlayer } = ctx;\r\n        if (matchData !== undefined && player !== playerID) {\r\n            nodes.push(<div\r\n                key={`name-${playerIndex}`}\r\n                className={classNames('positioned player-name', { 'current-player': currentPlayer === player })}\r\n                style={{\r\n                    left: playerArea.x + INFO_DELTA,\r\n                    top: playerArea.y + scaledHeight + INFO_DELTA,\r\n                    width: scaledWidth - 2 * INFO_DELTA,\r\n                    height: scaledHeight * 0.2,\r\n                }}\r\n            >\r\n                {matchData[playerIndex].name}\r\n            </div>);\r\n        }\r\n    }\r\n\r\n    addCharacterRole(playerArea, playerIndex, nodes) {\r\n        const { G, scaledWidth, scaledHeight } = this.props;\r\n        const { roles } = G;\r\n        const role = roles[playerIndex];\r\n        const roleName = role.name || 'Role Back';\r\n        nodes.push(<img\r\n            key={`role-${role.id}`}\r\n            className='positioned'\r\n            src={`./roles/${roleName}.jpg`}\r\n            alt={roleName}\r\n            style={{\r\n                left: playerArea.x + (1 - ROLE_RATIO) * scaledWidth - INFO_DELTA,\r\n                top: playerArea.y + INFO_DELTA,\r\n                width: scaledWidth * ROLE_RATIO,\r\n                height: scaledHeight * ROLE_RATIO,\r\n            }}\r\n        />);\r\n    }\r\n\r\n    addCharacterCard(playerArea, character, player, characterCards) {\r\n        const { G, moves, scaledWidth, scaledHeight } = this.props;\r\n        const { mode, selectedIndex } = this.state;\r\n        const { isAlive, isFlipped } = G;\r\n        let onClick = undefined;\r\n        if (mode === SetModePanel.GIVE_MODE && selectedIndex !== undefined) {\r\n            onClick = () => {\r\n                moves.give(selectedIndex, player);\r\n                this.setState({ mode: SetModePanel.DEFAULT_MODE, selectedIndex: undefined });\r\n            };\r\n        } else if (mode === SetModePanel.GIVE_JUDGMENT_MODE) {\r\n            onClick = () => {\r\n                moves.play(selectedIndex, player);\r\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n            };\r\n        } else if (mode === SetModePanel.REVEAL_MODE && selectedIndex !== undefined) {\r\n            onClick = () => {\r\n                moves.reveal(selectedIndex, player);\r\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n            };\r\n        } else if (mode === SetModePanel.FLIP_MODE) {\r\n            onClick = () => {\r\n                moves.flipObject(player);\r\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n            };\r\n        } else if (mode === SetModePanel.HELP_MODE) {\r\n            onClick = () => this.setState({ helpCard: { key: character.name, src: `./characters/${character.name}.jpg` } });\r\n        } else if (mode === SetModePanel.COUNTRY_SCENE_MODE && selectedIndex !== undefined) {\r\n            onClick = () => {\r\n                moves.play(selectedIndex, player, 'Capture');\r\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n            };\r\n        } else if (mode === SetModePanel.BLOCKADE_MODE && selectedIndex !== undefined) {\r\n            onClick = () => {\r\n                moves.play(selectedIndex, player, 'Starvation');\r\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n            };\r\n        } else if (mode === SetModePanel.ALLIANCE_MODE) {\r\n            if (selectedIndex === undefined) {\r\n                onClick = () => this.setState({ selectedIndex: player });\r\n            } else {\r\n                onClick = () => {\r\n                    moves.alliance(selectedIndex, player);\r\n                    this.setState({ mode: SetModePanel.DEFAULT_MODE, selectedIndex: undefined });\r\n                };\r\n            }\r\n        }\r\n        characterCards.push({\r\n            key: character ? `character-${character.name}` : `character-back-${player}`,\r\n            name: character ? character.name : 'Character Back',\r\n            faceUp: character !== undefined && !isFlipped[player],\r\n            opacity: isAlive[player] ? 1 : 0.5,\r\n            left: playerArea.x,\r\n            top: playerArea.y,\r\n            width: scaledWidth,\r\n            height: scaledHeight,\r\n            onClick,\r\n        });\r\n    }\r\n\r\n    addHealth(playerArea, player, healthPoints, nodes) {\r\n        const { G, moves, playerID, width, height, scaledWidth, scaledHeight } = this.props;\r\n        const { characters, healths, isAlive, refusingDeath } = G;\r\n\r\n        const isRefusingDeath = characters[playerID] && characters[playerID].name === 'Zhou Tai' && healths[player].current <= 0;\r\n        const isDying = isRefusingDeath ? new Set(refusingDeath).size < refusingDeath.length : healths[player].current <= 0;\r\n\r\n        for (let i = 0; i < (isRefusingDeath ? refusingDeath.length : healths[player].max); i++) {\r\n            const color = !isRefusingDeath && i < healths[player].current ? 'green' : 'red';\r\n            healthPoints.push({\r\n                key: `health-${player}-${i}-${color}`,\r\n                color,\r\n                left: playerArea.x + scaledWidth * (0.23 + i * 0.06),\r\n                top: playerArea.y + scaledHeight * 0.01,\r\n                width: scaledWidth * 0.06,\r\n                height: scaledHeight * 0.05,\r\n            });\r\n        }\r\n\r\n        if (isAlive[player] && isDying) {\r\n            const SAVE_ME_WIDTH = 100; // pixels\r\n            const SAVE_ME_HEIGHT = 25; // pixels\r\n            nodes.push(<button\r\n                key='save-me'\r\n                className='positioned bad'\r\n                style={{\r\n                    left: playerArea.x + (scaledWidth - SAVE_ME_WIDTH) / 2,\r\n                    top: playerArea.y + (scaledHeight - SAVE_ME_HEIGHT) / 2,\r\n                    width: SAVE_ME_WIDTH,\r\n                    height: SAVE_ME_HEIGHT,\r\n                }}\r\n                disabled={true}\r\n            >\r\n                {'Save me!'}\r\n            </button>);\r\n        }\r\n\r\n        if (player !== playerID) {\r\n            return;\r\n        }\r\n\r\n        if (!isDying) {\r\n            nodes.push(<div\r\n                key='decrease-health'\r\n                className='positioned image-div selectable decrease-health'\r\n                style={{\r\n                    left: playerArea.x + scaledWidth * 0.23,\r\n                    top: playerArea.y + scaledHeight * 0.1,\r\n                    width: scaledWidth * 0.12,\r\n                    height: scaledHeight * 0.1,\r\n                }}\r\n                onClick={() => (isRefusingDeath ? moves.refusingDeath : moves.updateHealth)(-1)}\r\n            />);\r\n        } else if (isAlive[playerID]) {\r\n            const DIE_BUTTON_WIDTH = 180;\r\n            const DIE_BUTTON_HEIGHT = 30;\r\n            nodes.push(<button\r\n                key='die'\r\n                className={`positioned selectable bad`}\r\n                style={{\r\n                    left: (width - DIE_BUTTON_WIDTH) / 2,\r\n                    top: (height - DIE_BUTTON_HEIGHT) / 2,\r\n                    width: DIE_BUTTON_WIDTH,\r\n                    height: DIE_BUTTON_HEIGHT,\r\n                }}\r\n                onClick={() => moves.die()}\r\n            >\r\n                {'Die'}\r\n            </button>);\r\n        }\r\n        if (healths[playerID].current < healths[playerID].max) {\r\n            nodes.push(<div\r\n                key='increase-health'\r\n                className='positioned image-div selectable increase-health'\r\n                style={{\r\n                    left: playerArea.x + scaledWidth * 0.39,\r\n                    top: playerArea.y + scaledHeight * 0.1,\r\n                    width: scaledWidth * 0.12,\r\n                    height: scaledHeight * 0.1,\r\n                }}\r\n                onClick={() => (isRefusingDeath ? moves.refusingDeath : moves.updateHealth)(+1)}\r\n            />);\r\n        }\r\n    }\r\n\r\n    addChain(playerArea, player, nodes) {\r\n        const { G, moves, playerID, scaledWidth, scaledHeight } = this.props;\r\n        const { isChained } = G;\r\n        let onClick = undefined;\r\n        if (player === playerID) {\r\n            onClick = () => moves.toggleChain();\r\n        }\r\n        if (player === playerID || isChained[player]) {\r\n            nodes.push(<div\r\n                key={`chain-${player}`}\r\n                className={classNames('positioned image-div chain', { 'gray': !isChained[player] }, { 'selectable': onClick !== undefined })}\r\n                style={{\r\n                    left: playerArea.x + (1 - ROLE_RATIO) * scaledWidth - 2 * INFO_DELTA,\r\n                    top: playerArea.y + scaledHeight * 0.2,\r\n                    width: scaledWidth * ROLE_RATIO + 2 * INFO_DELTA,\r\n                    height: scaledHeight * 0.16,\r\n            }}\r\n                onClick={onClick}\r\n            />);\r\n        }\r\n    }\r\n\r\n    addPlayerEquipment(playerArea, player, normalCards) {\r\n        const { G, moves, playerID, scaledWidth, scaledHeight } = this.props;\r\n        const { mode } = this.state;\r\n        const { equipment, isFlipped } = G;\r\n        ['Weapon', 'Shield', '+1', '-1', 'Lightning', 'Capture', 'Starvation'].forEach((category, i) => {\r\n            const card = equipment[player][category];\r\n            if (card) {\r\n                let onClick = undefined;\r\n                if ((mode === SetModePanel.DEFAULT_MODE && player === playerID)\r\n                    || mode === SetModePanel.DISMANTLE_MODE\r\n                    || mode === SetModePanel.STEAL_MODE) {\r\n                    onClick = () => {\r\n                        (mode === SetModePanel.DEFAULT_MODE || mode === SetModePanel.DISMANTLE_MODE ? moves.dismantle : moves.steal)({\r\n                            playerID: player,\r\n                            category,\r\n                        });\r\n                        this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n                    };\r\n                } else if (mode === SetModePanel.HELP_MODE) {\r\n                    onClick = () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\r\n                }\r\n                if (i < 4) {\r\n                    // Equipment cards\r\n                    normalCards.push({\r\n                        key: `card-${card.id}`,\r\n                        className: 'small-shadow',\r\n                        card,\r\n                        faceUp: !isFlipped[card.id],\r\n                        opacity: 1,\r\n                        left: playerArea.x + (scaledWidth - (CARD_RATIO * scaledWidth + INFO_DELTA) * (2 - i % 2)),\r\n                        top: playerArea.y + (scaledHeight - (CARD_RATIO * scaledHeight + INFO_DELTA) * (2 - Math.floor(i / 2))),\r\n                        scale: CARD_RATIO,\r\n                        onClick,\r\n                    });\r\n                } else {\r\n                    // Judgment cards\r\n                    normalCards.push({\r\n                        key: `card-${card.id}`,\r\n                        className: 'small-shadow',\r\n                        card,\r\n                        faceUp: true,\r\n                        sideways: true,\r\n                        opacity: 1,\r\n                        left: playerArea.x + scaledWidth * 0.33,\r\n                        top: playerArea.y + scaledHeight * (0.16 + 0.18 * (i - 4)),\r\n                        scale: CARD_RATIO,\r\n                        onClick,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    addOtherPlayerHand(playerArea, player, normalCards, nodes) {\r\n        const { G, moves, scaledWidth, scaledHeight } = this.props;\r\n        const { mode } = this.state;\r\n        const { hands } = G;\r\n        const hand = hands[player];\r\n        // Show the card backs\r\n        hand.forEach(card => {\r\n            let onClick = undefined;\r\n            if (mode === SetModePanel.DISMANTLE_MODE || mode === SetModePanel.STEAL_MODE) {\r\n                onClick = () => {\r\n                    (mode === SetModePanel.DISMANTLE_MODE ? moves.dismantle : moves.steal)({\r\n                        playerID: player,\r\n                        index: Math.floor(Math.random() * hand.length),\r\n                    });\r\n                    this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n                };\r\n            }\r\n            normalCards.push({\r\n                key: `card-${card.id}`,\r\n                className: 'small-shadow',\r\n                card,\r\n                opacity: 1,\r\n                left: playerArea.x + INFO_DELTA,\r\n                top: playerArea.y + (1 - CARD_RATIO) * scaledHeight - INFO_DELTA,\r\n                scale: CARD_RATIO,\r\n                onClick,\r\n            });\r\n        });\r\n        // Show the card count\r\n        if (hand.length > 0) {\r\n            nodes.push(<div\r\n                key={`card-count-${player}`}\r\n                className='game-label'\r\n                style={{\r\n                    left: playerArea.x + INFO_DELTA,\r\n                    top: playerArea.y + (1 - CARD_RATIO) * scaledHeight - INFO_DELTA,\r\n                    width: scaledWidth * CARD_RATIO,\r\n                    height: scaledHeight * CARD_RATIO,\r\n                    marginLeft: scaledWidth * CARD_RATIO * 0.1,\r\n                    marginTop: scaledWidth * CARD_RATIO * 0.1,\r\n                    fontSize: scaledWidth * CARD_RATIO * 0.6,\r\n                }}\r\n            >\r\n                {hand.length}\r\n            </div>);\r\n        }\r\n    }\r\n\r\n    addDeck(normalCards) {\r\n        const { G, moves, height, scaledHeight } = this.props;\r\n        const { mode } = this.state;\r\n        const { deck, privateZone } = G;\r\n        const MAX_CARDS_SHOWN = 10;\r\n        deck.slice(-MAX_CARDS_SHOWN).forEach((card, i) => {\r\n            let onClick = undefined;\r\n            if (mode === SetModePanel.DEFAULT_MODE && card === deck[deck.length - 1]) {\r\n                const doingAstrology = privateZone.filter(item => item.source.deck).length > 0;\r\n                if (doingAstrology) {\r\n                    onClick = () => moves.astrology(1);\r\n                } else {\r\n                    onClick = () => moves.draw();\r\n                }\r\n            }\r\n            normalCards.push({\r\n                key: `card-${card.id}`,\r\n                card,\r\n                opacity: 1,\r\n                left: DELTA * (1 - i / MAX_CARDS_SHOWN),\r\n                top: height - scaledHeight * DECK_RATIO - DELTA * (i / MAX_CARDS_SHOWN),\r\n                scale: DECK_RATIO,\r\n                onClick,\r\n            });\r\n        });\r\n    }\r\n\r\n    addMyHand(normalCards) {\r\n        const { G, playerID, width, height, scaledWidth, scaledHeight } = this.props;\r\n        const { hands, isFlipped } = G;\r\n        const myHand = hands[playerID];\r\n        if (myHand) {\r\n            const spacing = Math.min(scaledWidth + DELTA, (width - (2 + DECK_RATIO) * scaledWidth - 5 * DELTA) / (hands[playerID].length - 1));\r\n            hands[playerID].forEach((card, i) => {\r\n                const onClick = this.selectFunction(i);\r\n                normalCards.push({\r\n                    key: `card-${card.id}`,\r\n                    card,\r\n                    faceUp: !isFlipped[card.id],\r\n                    opacity: onClick !== undefined ? 1 : 0.3,\r\n                    left: DECK_RATIO * scaledWidth + 2 * DELTA + spacing * i,\r\n                    top: height - scaledHeight - DELTA,\r\n                    scale: 1,\r\n                    onClick,\r\n                });\r\n            })\r\n        }\r\n    }\r\n \r\n    getPrivateZoneCards(middleCardsFound) {\r\n        const { G, moves, playerID, width, height, scaledWidth, scaledHeight } = this.props;\r\n        const { mode } = this.state;\r\n        const { privateZone } = G;\r\n        const privateCards = privateZone.filter(item => item.visibleTo.includes(playerID));\r\n        const startX = (width - privateCards.length * scaledWidth * MIDDLE_CARD_RATIO - (privateCards.length - 1) * DELTA) / 2;\r\n        const normalCards = [];\r\n        privateCards.forEach(({ card, visibleTo }, i) => {\r\n            let onClick = undefined;\r\n            if (mode === SetModePanel.DEFAULT_MODE) {\r\n                onClick = () => moves.returnCard(card.id);\r\n            } else if (mode === SetModePanel.HELP_MODE) {\r\n                onClick = () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\r\n            }\r\n            normalCards.push({\r\n                key: `card-${card.id}`,\r\n                className: 'shadow',\r\n                card,\r\n                faceUp: true,\r\n                opacity: middleCardsFound ? 0 : 1,\r\n                left: startX + (scaledWidth * MIDDLE_CARD_RATIO + DELTA) * i,\r\n                top: (height - scaledHeight * MIDDLE_CARD_RATIO) / 2,\r\n                scale: MIDDLE_CARD_RATIO,\r\n                onClick: middleCardsFound ? undefined : onClick,\r\n            });\r\n        });\r\n        return normalCards;\r\n    }\r\n\r\n    getHarvestCards(middleCardsFound) {\r\n        const { G, moves, width, height, scaledWidth, scaledHeight } = this.props;\r\n        const { mode } = this.state;\r\n        const { harvest } = G;\r\n        const startX = (width - harvest.length * scaledWidth * MIDDLE_CARD_RATIO - (harvest.length - 1) * DELTA) / 2;\r\n        const normalCards = [];\r\n        harvest.forEach((card, i) => {\r\n            let onClick = undefined;\r\n            if (mode === SetModePanel.DEFAULT_MODE) {\r\n                onClick = () => moves.pickUpHarvest(i);\r\n            } else if (mode === SetModePanel.HELP_MODE) {\r\n                onClick = () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\r\n            }\r\n            normalCards.push({\r\n                key: `card-${card.id}`,\r\n                className: 'shadow',\r\n                card,\r\n                faceUp: true,\r\n                opacity: middleCardsFound ? 0 : 1,\r\n                left: startX + (scaledWidth * MIDDLE_CARD_RATIO + DELTA) * i,\r\n                top: (height - scaledHeight * MIDDLE_CARD_RATIO) / 2,\r\n                scale: MIDDLE_CARD_RATIO,\r\n                onClick: middleCardsFound ? undefined : onClick,\r\n            });\r\n        });\r\n        return normalCards;\r\n    }\r\n\r\n    getDiscardCards(middleCardsFound) {\r\n        const { G, moves, width, height, scaledWidth, scaledHeight } = this.props;\r\n        const { mode } = this.state;\r\n        const { discard, isFlipped } = G;\r\n        const MAX_DISCARDS_SHOWN = 4;\r\n        const numCardsShown = Math.min(discard.length, MAX_DISCARDS_SHOWN);\r\n        const startX = (width - numCardsShown * scaledWidth * MIDDLE_CARD_RATIO - (numCardsShown - 1) * DELTA) / 2;\r\n        const normalCards = [];\r\n        for (let i = 0; i < discard.length && i <= MAX_DISCARDS_SHOWN; i++) {\r\n            const card = discard[discard.length - 1 - i];\r\n            let onClick = undefined;\r\n            if (mode === SetModePanel.DEFAULT_MODE && i < MAX_DISCARDS_SHOWN) {\r\n                onClick = () => moves.pickUp(discard.length - 1 - i);\r\n            } else if (mode === SetModePanel.FLIP_MODE) {\r\n                onClick = () => {\r\n                    moves.flipObject(card.id);\r\n                    this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n                };\r\n            } else if (mode === SetModePanel.HELP_MODE) {\r\n                onClick = () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\r\n            }\r\n            normalCards.push({\r\n                key: `card-${card.id}`,\r\n                className: 'shadow',\r\n                card,\r\n                faceUp: !isFlipped[card.id],\r\n                opacity: i === MAX_DISCARDS_SHOWN || middleCardsFound ? 0 : 1,\r\n                left: startX + (scaledWidth * MIDDLE_CARD_RATIO + DELTA) * i,\r\n                top: (height - scaledHeight * MIDDLE_CARD_RATIO) / 2,\r\n                scale: MIDDLE_CARD_RATIO,\r\n                onClick: middleCardsFound ? undefined : onClick,\r\n            });\r\n        }\r\n        return normalCards;\r\n    }\r\n\r\n    renderSetModePanel() {\r\n        const { G, ctx, moves, playerID } = this.props;\r\n        const { mode } = this.state;\r\n        return <SetModePanel\r\n            key='set-mode-panel'\r\n            G={G}\r\n            ctx={ctx}\r\n            moves={moves}\r\n            playerID={playerID}\r\n            mode={mode}\r\n            setMode={mode => this.setState({ mode, selectedIndex: undefined, helpCard: undefined })}\r\n            setSelectedIndex={selectedIndex => this.setState({ selectedIndex })}\r\n            selectFunction={this.selectFunction}\r\n        />;\r\n    }\r\n\r\n    renderMyArea() {\r\n        const { scaledHeight } = this.props;\r\n        return <div\r\n            key='my-area'\r\n            className='my-area'\r\n            style={{\r\n                height: scaledHeight + 2 * DELTA,\r\n            }}\r\n        />;\r\n    }\r\n\r\n    renderActionButton() {\r\n        const { G, ctx, moves, playerID, width, height, scaledHeight, playAgain } = this.props;\r\n        const { mode, selectedIndex } = this.state;\r\n        const { isAlive, privateZone } = G;\r\n        const { currentPlayer, gameover, phase, activePlayers } = ctx;\r\n        const ACTION_BUTTON_WIDTH = 160;\r\n        const ACTION_BUTTON_HEIGHT = 30;\r\n        let actionButton = undefined;\r\n        if (gameover && playAgain) {\r\n            actionButton = {\r\n                text: 'Play again',\r\n                type: 'selectable warn',\r\n                onClick: playAgain,\r\n            };\r\n        } else if (this.stage() === 'selectCharacter' && selectedIndex !== undefined) {\r\n            actionButton = {\r\n                text: 'Select',\r\n                type: 'selectable warn',\r\n                onClick: () => {\r\n                    moves.selectCharacter(selectedIndex);\r\n                    this.setState({ selectedIndex: undefined });\r\n                },\r\n            };\r\n        } else if (phase === 'selectCharacters' && this.stage() === undefined) {\r\n            actionButton = {\r\n                text: activePlayers[currentPlayer] === 'selectCharacter' ? 'Waiting for king...' : 'Waiting for others...',\r\n                type: 'disabled',\r\n            };\r\n        } else if (!isAlive[playerID]) {\r\n            return undefined;\r\n        } else if ((mode === SetModePanel.GIVE_MODE && selectedIndex !== undefined)\r\n            || (mode === SetModePanel.REVEAL_MODE && selectedIndex !== undefined)\r\n            || mode === SetModePanel.GIVE_JUDGMENT_MODE\r\n            || (mode === SetModePanel.COUNTRY_SCENE_MODE && selectedIndex !== undefined)\r\n            || (mode === SetModePanel.BLOCKADE_MODE && selectedIndex !== undefined)\r\n            || (mode === SetModePanel.ALLIANCE_MODE && selectedIndex === undefined)) {\r\n            actionButton = {\r\n                text: 'Select player',\r\n                type: 'disabled',\r\n            };\r\n        } else if (mode === SetModePanel.ALLIANCE_MODE && selectedIndex !== undefined) {\r\n            actionButton = {\r\n                text: 'Select player 2',\r\n                type: 'disabled',\r\n            };\r\n        } else if (this.stage() === 'play' && currentPlayer === playerID && privateZone.length === 0) {\r\n            actionButton = {\r\n                text: 'End play',\r\n                type: 'selectable warn',\r\n                onClick: () => moves.endPlay(),\r\n            }\r\n        } else if (this.stage() === 'discard') {\r\n            actionButton = {\r\n                text: 'Discard cards',\r\n                type: 'disabled',\r\n            };\r\n        }\r\n        if (actionButton !== undefined) {\r\n            const { text, type, onClick } = actionButton;\r\n            return <button\r\n                className={`positioned ${type}`}\r\n                style={{\r\n                    left: (width - ACTION_BUTTON_WIDTH) / 2,\r\n                    top: height - scaledHeight - ACTION_BUTTON_HEIGHT - 3 * DELTA,\r\n                    width: ACTION_BUTTON_WIDTH,\r\n                    height: ACTION_BUTTON_HEIGHT,\r\n                }}\r\n                onClick={onClick}\r\n                disabled={onClick === undefined}\r\n            >\r\n                {text}\r\n            </button>;\r\n        }\r\n    }\r\n\r\n    renderHelp() {\r\n        const { mode, helpCard } = this.state;\r\n        if (mode === SetModePanel.HELP_MODE && helpCard !== undefined) {\r\n            return <div\r\n                className='help-panel'\r\n            >\r\n                <img src={helpCard.src} alt='card' />\r\n                <div dangerouslySetInnerHTML={{ __html: RULES[helpCard.key] }} />\r\n                <button\r\n                    className='selectable bad'\r\n                    onClick={() => this.setState({ mode: SetModePanel.DEFAULT_MODE, helpCard: undefined })}\r\n                >\r\n                    {'X'}\r\n                </button>\r\n            </div>;\r\n        }\r\n    }\r\n\r\n    selectFunction = index => {\r\n        const { G, moves, playerID } = this.props;\r\n        const { mode, selectedIndex } = this.state;\r\n        const { hands, harvest } = G;\r\n        const card = hands[playerID][index];\r\n        if (mode === SetModePanel.DEFAULT_MODE && this.stage() === 'play') {\r\n            if (harvest.length > 0) {\r\n                return () => moves.putDownHarvest(index);\r\n            } else if (['Capture', 'Starvation'].includes(EQUIPMENT[card.type])) {\r\n                return () => this.setState({ mode: SetModePanel.GIVE_JUDGMENT_MODE, selectedIndex: index });\r\n            } else {\r\n                return () => moves.play(index);\r\n            }\r\n        } else if (mode === SetModePanel.DEFAULT_MODE && this.stage() === 'discard') {\r\n            return () => moves.discardCard(index);\r\n        } else if (mode === SetModePanel.GIVE_MODE && selectedIndex === undefined) {\r\n            return () => this.setState({ selectedIndex: index });\r\n        } else if (mode === SetModePanel.DISMANTLE_MODE) {\r\n            return () => {\r\n                moves.dismantle({\r\n                    playerID,\r\n                    index: index,\r\n                });\r\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n            };\r\n        } else if (mode === SetModePanel.REVEAL_MODE && selectedIndex === undefined) {\r\n            return () => this.setState({ selectedIndex: index });\r\n        } else if (mode === SetModePanel.FLIP_MODE) {\r\n            return () => {\r\n                moves.flipObject(card.id);\r\n                this.setState({ mode: SetModePanel.DEFAULT_MODE });\r\n            };\r\n        } else if (mode === SetModePanel.HELP_MODE) {\r\n            return () => this.setState({ helpCard: { key: card.type, src: `./cards/${card.type}.jpg` } });\r\n        } else if (mode === SetModePanel.COUNTRY_SCENE_MODE && selectedIndex === undefined) {\r\n            if (card.suit === 'DIAMOND') {\r\n                return () => this.setState({ mode: SetModePanel.COUNTRY_SCENE_MODE, selectedIndex: index });\r\n            }\r\n        } else if (mode === SetModePanel.BLOCKADE_MODE && selectedIndex === undefined) {\r\n            if (['CLUB', 'SPADE'].includes(card.suit) && (BASIC.includes(card.type) || EQUIPMENT[card.type])) {\r\n                return () => this.setState({ mode: SetModePanel.COUNTRY_SCENE_MODE, selectedIndex: index });\r\n            }\r\n        }\r\n    }\r\n\r\n    stage() {\r\n        const { ctx, playerID } = this.props;\r\n        const { activePlayers } = ctx;\r\n        return activePlayers && activePlayers[playerID];\r\n    }\r\n}\r\n","import React from 'react';\r\nimport GameArea from './gameArea.js';\r\nimport './board.css';\r\n\r\nconst CARD_WIDTH = 210;\r\nconst CARD_HEIGHT = 300;\r\nconst DELTA = 10;\r\n\r\nexport class SanGuoShaBoard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateDimensions();\r\n        window.addEventListener('resize', this.updateDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimensions);\r\n    }\r\n\r\n    render() {\r\n        const { ctx } = this.props;\r\n        const { clientRect } = this.state;\r\n        let gameArea = undefined;\r\n        if (clientRect) {\r\n            const { playerAreas, scale } = this.findPlayerAreas(ctx.numPlayers, clientRect);\r\n            gameArea = <GameArea\r\n                width={clientRect.width}\r\n                height={clientRect.height}\r\n                playerAreas={playerAreas}\r\n                scaledWidth={CARD_WIDTH * scale}\r\n                scaledHeight={CARD_HEIGHT * scale}\r\n                {...this.props}\r\n            />;\r\n        }\r\n        return <div className='board' ref={el => this.el = el}>\r\n            {gameArea}\r\n        </div>;\r\n    }\r\n\r\n    updateDimensions = () => {\r\n        if (this.el) {\r\n            this.setState({\r\n                clientRect: {\r\n                    width: this.el.clientWidth,\r\n                    height: this.el.clientHeight,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Find the player areas (given by their top left coordinates, and their scale) that look the\r\n     * most uniform around the screen.\r\n     */\r\n    findPlayerAreas(numPlayers, { width, height }) {\r\n        // find maximum scale of player areas so that they still fit\r\n        let maxScale = 0.1;\r\n        let bestLayout = undefined;\r\n        for (var numSide = 0; numSide <= (numPlayers - 1) / 3; numSide++) {\r\n            const numTop = numPlayers - 1 - 2 * numSide;\r\n\r\n            let scale = 1;\r\n            scale = Math.min(scale, (width - 4 * DELTA) / 6 / CARD_WIDTH);\r\n            scale = Math.min(scale, (height - 4 * DELTA) / 3.5 / CARD_HEIGHT);\r\n            scale = Math.min(scale, (width - (numTop + 3) * DELTA) / (numTop + 1) / CARD_WIDTH);\r\n            scale = Math.min(scale, (height - (numSide + 2) * DELTA) / (numSide + 1) / CARD_HEIGHT);\r\n            if (scale >= maxScale) {\r\n                maxScale = scale;\r\n                bestLayout = { numTop, numSide };\r\n            }\r\n        }\r\n        return this.findPlayerAreasGivenLayout(maxScale, bestLayout, { width, height });\r\n    }\r\n\r\n    findPlayerAreasGivenLayout(scale, { numTop, numSide }, { width, height }) {\r\n        const scaledWidth = CARD_WIDTH * scale;\r\n        const scaledHeight = CARD_HEIGHT * scale;\r\n        const sideSpacing = (height - (numSide + 1) * scaledHeight) / (numSide + 1);\r\n        const topSpacing = (width - 2 * DELTA - (numTop + 2) * scaledWidth) / (numTop + 1);\r\n\r\n        const playerAreas = [];\r\n        playerAreas.push({\r\n            x: width - DELTA - scaledWidth,\r\n            y: height - DELTA - scaledHeight,\r\n        });\r\n        for (let i = 0; i < numSide; i++) {\r\n            playerAreas.push({\r\n                x: width - scaledWidth - DELTA,\r\n                y: sideSpacing + (scaledHeight + sideSpacing) * (numSide - i - 1),\r\n            });\r\n        }\r\n        for (let i = 0; i < numTop; i++) {\r\n            playerAreas.push({\r\n                x: width - DELTA - scaledWidth - (scaledWidth + topSpacing) * (i + 1),\r\n                y: DELTA,\r\n            });\r\n        }\r\n        for (let i = 0; i < numSide; i++) {\r\n            playerAreas.push({\r\n                x: DELTA,\r\n                y: sideSpacing + (scaledHeight + sideSpacing) * i,\r\n            });\r\n        }\r\n        return { playerAreas, scale };\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Client } from 'boardgame.io/react';\r\nimport { SanGuoSha } from '../lib/game';\r\nimport { SanGuoShaBoard } from './board';\r\nimport logger from 'redux-logger';\r\nimport { applyMiddleware } from 'redux';\r\n\r\nconst SanGuoShaClient = Client({\r\n    game: SanGuoSha,\r\n    board: SanGuoShaBoard,\r\n    numPlayers: 3,\r\n    enhancer: applyMiddleware(logger),\r\n});\r\n\r\nexport default class Room extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SanGuoShaClient playerID={\"0\"} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { LobbyClient } from 'boardgame.io/client';\r\nimport { SocketIO } from 'boardgame.io/multiplayer';\r\nimport { Client } from 'boardgame.io/react';\r\nimport { SanGuoSha } from '../lib/game';\r\nimport { SanGuoShaBoard } from './board';\r\nimport './lobby.css';\r\n\r\nconst SERVER = process.env.REACT_APP_PROXY || document.location.toString().replace(/\\/$/, '');\r\nconst NAME_KEY = 'name';\r\nconst MATCH_INFO_KEY = 'matchInfo';\r\nconst INPUT_NAME_ID = 'name-input';\r\nconst EXPANSIONS = ['wind', 'fire', 'wood'];\r\n\r\nconst SanGuoShaClient = Client({\r\n    game: SanGuoSha,\r\n    board: SanGuoShaBoard,\r\n    multiplayer: SocketIO({ server: SERVER }),\r\n    debug: false,\r\n});\r\n\r\nexport default class SanGuoShaLobby extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.lobbyClient = new LobbyClient({ server: SERVER });\r\n        const matchInfo = window.localStorage.getItem(MATCH_INFO_KEY);\r\n        this.state = {\r\n            name: window.localStorage.getItem(NAME_KEY),\r\n            matchInfo: matchInfo ? JSON.parse(matchInfo) : undefined, // { matchID, playerID, credentials }\r\n            matches: [],\r\n            inGame: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Mobile requires explicit user action to play audio\r\n        document.querySelector('#lobby-view').addEventListener('click', this.props.playAudio);\r\n        this.refreshLobbyState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.querySelector('#lobby-view').removeEventListener('click', this.props.playAudio);\r\n    }\r\n\r\n    refreshLobbyState = async () => {\r\n        const { matchInfo } = this.state;\r\n        const { matches } = await this.lobbyClient.listMatches(SanGuoSha.name);\r\n\r\n        if (matchInfo !== undefined) {\r\n            const { matchID, playerID } = matchInfo;\r\n\r\n            const match = matches.find(match => match.matchID === matchID);\r\n            if (match === undefined) {\r\n                this.setState({ matchInfo: undefined });\r\n                await this.leaveMatch();\r\n                this.refreshLobbyState();\r\n                return;\r\n            }\r\n\r\n            if (match.setupData.parentMatchID !== undefined) {\r\n                this.setState({ inGame: true });\r\n                return;\r\n            }\r\n\r\n            const childMatch = matches.find(match => match.setupData.parentMatchID === matchID);\r\n            if (childMatch !== undefined) {\r\n                await this.leaveMatch();\r\n                await this.joinMatch(childMatch.matchID, playerID);\r\n                this.refreshLobbyState();\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({ matches });\r\n        clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(this.refreshLobbyState, 1000);\r\n        return;\r\n    }\r\n\r\n    render() {\r\n        const { matchInfo, inGame } = this.state;\r\n        if (inGame) {\r\n            const { matchID, playerID, credentials } = matchInfo;\r\n            return <div>\r\n                <SanGuoShaClient\r\n                    matchID={matchID}\r\n                    playerID={playerID}\r\n                    credentials={credentials}\r\n                    playAgain={playerID === '-1' ? undefined : () => {\r\n                        this.setState({ inGame: false });\r\n                        this.playAgain().then(this.refreshLobbyState);\r\n                    }}\r\n                />\r\n                <button\r\n                    className=\"leave-button\"\r\n                    onClick={() => {\r\n                        this.setState({ inGame: false });\r\n                        this.leaveMatch().then(this.refreshLobbyState);\r\n                    }}\r\n                >\r\n                    {'Leave'}\r\n                </button>\r\n            </div>;\r\n        }\r\n        return <div className='lobby'>\r\n            <div className='title'>\r\n                <img src='./name.png' alt='sanguosha' />\r\n            </div>\r\n            <div id=\"lobby-view\">{this.renderLobby()}</div>\r\n        </div>;\r\n    }\r\n\r\n    renderLobby() {\r\n        const { name, matches } = this.state;\r\n        if (name === null || name === undefined) {\r\n            return <div>\r\n                <p>{'Choose a player name:'}</p>\r\n                <input\r\n                    id={INPUT_NAME_ID}\r\n                    type=\"text\"\r\n                    defaultValue=\"Visitor\"\r\n                    onKeyPress={e => {\r\n                        if (e.nativeEvent.key === 'Enter') {\r\n                            this.setName();\r\n                        }\r\n                    }}\r\n                />\r\n                <button onClick={this.setName}>{'Enter'}</button>\r\n            </div>;\r\n        } else {\r\n            return <div>\r\n                <p>{`Welcome, ${name}`}</p>\r\n                {this.maybeRenderCreateButton()}\r\n                <div id=\"instances\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>{'Creation time'}</th>\r\n                                <th>{'Players'}</th>\r\n                                <th>{'Status'}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            {matches.map(this.renderMatch)}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>;\r\n        };\r\n    }\r\n\r\n    maybeRenderCreateButton() {\r\n        const { matchInfo } = this.state;\r\n        if (matchInfo !== undefined) {\r\n            return;\r\n        }\r\n        return <button\r\n            onClick={() => this.createMatch(SanGuoSha.maxPlayers, undefined)\r\n                .then(matchID => this.joinMatch(matchID, '0'))\r\n                .then(this.refreshLobbyState)}\r\n        >\r\n            {'Create new room'}\r\n        </button>;\r\n    }\r\n\r\n    renderMatch = match => {\r\n        const { name, matchInfo } = this.state;\r\n        const { createdAt, gameover, matchID, players, setupData } = match;\r\n        const playerNames = players.map(player => player.name).filter(name => name !== undefined);\r\n        let status;\r\n        if (gameover) {\r\n            status = 'Completed';\r\n        } else if (setupData.parentMatchID !== undefined) {\r\n            status = 'In progress';\r\n        } else if (playerNames.length < SanGuoSha.minPlayers) {\r\n            status = 'Waiting for more players';\r\n        } else if (playerNames[0] === name) {\r\n            status = ['Expansions:', ...EXPANSIONS.map(expansion => <span key={expansion} className='expansion'>\r\n                <input\r\n                    type='checkbox'\r\n                    value={this.state[`expansion-${expansion}`]}\r\n                    onChange={e => this.setState({ [`expansion-${expansion}`]: e.target.checked })}\r\n                />\r\n                {expansion}\r\n            </span>)];\r\n        } else {\r\n            status = 'Waiting for host to start';\r\n        }\r\n        const buttons = [];\r\n        if (matchInfo === undefined || matchInfo.matchID !== matchID) {\r\n            if (!gameover && players.some(player => player.name === undefined)) {\r\n                buttons.push(\r\n                    <button\r\n                        key=\"join\"\r\n                        onClick={() => this.leaveMatch()\r\n                            .then(() => this.joinMatch(matchID, players.find(player => player.name === undefined).id.toString()))\r\n                            .then(this.refreshLobbyState)}\r\n                    >\r\n                        {'Join'}\r\n                    </button>\r\n                );\r\n            } else {\r\n                buttons.push(\r\n                    <button\r\n                        key=\"watch\"\r\n                        onClick={() => this.leaveMatch()\r\n                            .then(() => this.setState({ matchInfo: { matchID: matchID, playerID: '-1', }, inGame: true }))}\r\n                    >\r\n                        {'Watch'}\r\n                    </button>\r\n                );\r\n            }\r\n        } else {\r\n            if (playerNames[0] === name && playerNames.length >= SanGuoSha.minPlayers) {\r\n                buttons.push(\r\n                    <button\r\n                        key=\"start\"\r\n                        onClick={() => this.createMatch(playerNames.length, matchID).then(this.refreshLobbyState)}\r\n                    >\r\n                        {'Start'}\r\n                    </button>\r\n                );\r\n            }\r\n            buttons.push(\r\n                <button key=\"leave\"\r\n                    onClick={() => this.leaveMatch().then(this.refreshLobbyState)}\r\n                >\r\n                    {'Leave'}\r\n                </button>\r\n            );\r\n        }\r\n        return <tr key={matchID}>\r\n            <td>{new Date(createdAt).toLocaleString()}</td>\r\n            <td>{playerNames.join(', ')}</td>\r\n            <td>{status}</td>\r\n            <td>{buttons}</td>\r\n        </tr>;\r\n    }\r\n\r\n    setName = () => {\r\n        const name = document.getElementById(INPUT_NAME_ID).value;\r\n        this.setState({ name });\r\n        window.localStorage.setItem(NAME_KEY, name);\r\n    }\r\n\r\n    createMatch = async (numPlayers, parentMatchID) => {\r\n        const { matchID } = await this.lobbyClient.createMatch(\r\n            SanGuoSha.name,\r\n            {\r\n                numPlayers,\r\n                setupData: {\r\n                    parentMatchID,\r\n                    expansions: EXPANSIONS.filter(expansion => this.state[`expansion-${expansion}`]),\r\n                },\r\n            },\r\n        );\r\n        return matchID;\r\n    }\r\n\r\n    joinMatch = async (matchID, playerID) => {\r\n        const { name } = this.state;\r\n        const { playerCredentials } = await this.lobbyClient.joinMatch(\r\n            SanGuoSha.name,\r\n            matchID,\r\n            {\r\n                playerID,\r\n                playerName: name,\r\n            },\r\n        );\r\n        const matchInfo = {\r\n            matchID,\r\n            playerID,\r\n            credentials: playerCredentials,\r\n        };\r\n        this.setState({ matchInfo });\r\n        window.localStorage.setItem(MATCH_INFO_KEY, JSON.stringify(matchInfo));\r\n    }\r\n\r\n    leaveMatch = async () => {\r\n        const { matchInfo } = this.state;\r\n        this.setState({ matchInfo: undefined, inGame: false });\r\n        window.localStorage.removeItem(MATCH_INFO_KEY);\r\n        if (matchInfo === undefined || matchInfo.credentials === undefined) {\r\n            return;\r\n        }\r\n        const { matchID, playerID, credentials } = matchInfo;\r\n        await this.lobbyClient.leaveMatch(\r\n            SanGuoSha.name,\r\n            matchID,\r\n            {\r\n                playerID,\r\n                credentials,\r\n            },\r\n        );\r\n    }\r\n\r\n    playAgain = async () => {\r\n        const { matchInfo: { matchID, playerID, credentials } } = this.state;\r\n        const { nextMatchID } = await this.lobbyClient.playAgain(SanGuoSha.name, matchID, {\r\n            playerID,\r\n            credentials,\r\n            numPlayers: SanGuoSha.maxPlayers,\r\n            setupData: {},\r\n        });\r\n        await this.leaveMatch();\r\n        this.joinMatch(nextMatchID, playerID);\r\n    }\r\n}\r\n","import * as classNames from 'classnames';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Room from './client/room';\r\nimport Lobby from './client/lobby';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.audio = new Audio();\r\n        this.audio.src = './background.mp3';\r\n        this.audio.volume = 0.1;\r\n        this.audio.loop = true;\r\n        this.audio.play();\r\n        this.state = { volume: 0.1 };\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {process.env.REACT_APP_LOCAL ? <Room /> : <Lobby playAudio={() => this.audio.play()} />}\r\n            <button\r\n                className={classNames('toggle-sound', this.state.volume === 0 ? 'off' : 'on')}\r\n                onClick={() => {\r\n                    this.audio.volume = 0.1 - this.audio.volume;\r\n                    this.setState({ volume: this.audio.volume });\r\n                }}\r\n            />\r\n        </div>;\r\n    }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}